

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Feb 08 20:51:44 2018

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F45K80
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           ; Version 1.42
    44                           ; Generated 13/04/2017 GMT
    45                           ; 
    46                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F45K80 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77  0000                     
    78                           	psect	nvCOMRAM
    79  000049                     __pnvCOMRAM:
    80                           	opt stack 0
    81  000049                     _timer0ReloadVal:
    82                           	opt stack 0
    83  000049                     	ds	2
    84  00004B                     _TMR0_InterruptHandler:
    85                           	opt stack 0
    86  00004B                     	ds	2
    87  00004D                     _TMR1_InterruptHandler:
    88                           	opt stack 0
    89  00004D                     	ds	2
    90  00004F                     _timer1ReloadVal:
    91                           	opt stack 0
    92  00004F                     	ds	2
    93  0000                     _BRGCON3	set	3653
    94  0000                     _BRGCON2	set	3652
    95  0000                     _BRGCON1	set	3651
    96  0000                     _RXF5SIDL	set	3829
    97  0000                     _RXF5SIDH	set	3828
    98  0000                     _RXF5EIDL	set	3831
    99  0000                     _RXF5EIDH	set	3830
   100  0000                     _RXF4SIDL	set	3825
   101  0000                     _RXF4SIDH	set	3824
   102  0000                     _RXF4EIDL	set	3827
   103  0000                     _RXF4EIDH	set	3826
   104  0000                     _RXF3SIDL	set	3821
   105  0000                     _RXF3SIDH	set	3820
   106  0000                     _RXF3EIDL	set	3823
   107  0000                     _RXF3EIDH	set	3822
   108  0000                     _RXF2SIDL	set	3817
   109  0000                     _RXF2SIDH	set	3816
   110  0000                     _RXF2EIDL	set	3819
   111  0000                     _RXF2EIDH	set	3818
   112  0000                     _RXF1SIDL	set	3813
   113  0000                     _RXF1SIDH	set	3812
   114  0000                     _RXF1EIDL	set	3815
   115  0000                     _RXF1EIDH	set	3814
   116  0000                     _RXF0SIDL	set	3809
   117  0000                     _RXF0SIDH	set	3808
   118  0000                     _RXF0EIDL	set	3811
   119  0000                     _RXF0EIDH	set	3810
   120  0000                     _RXM1SIDL	set	3837
   121  0000                     _RXM1SIDH	set	3836
   122  0000                     _RXM1EIDL	set	3839
   123  0000                     _RXM1EIDH	set	3838
   124  0000                     _RXM0SIDL	set	3833
   125  0000                     _RXM0SIDH	set	3832
   126  0000                     _RXM0EIDL	set	3835
   127  0000                     _RXM0EIDH	set	3834
   128  0000                     _RXB1D7	set	3901
   129  0000                     _RXB1D6	set	3900
   130  0000                     _RXB1D5	set	3899
   131  0000                     _RXB1D4	set	3898
   132  0000                     _RXB1D3	set	3897
   133  0000                     _RXB1D2	set	3896
   134  0000                     _RXB1D1	set	3895
   135  0000                     _RXB1D0	set	3894
   136  0000                     _RXB1DLC	set	3893
   137  0000                     _RXB1SIDH	set	3889
   138  0000                     _RXB1EIDL	set	3892
   139  0000                     _RXB1EIDH	set	3891
   140  0000                     _RXB1SIDL	set	3890
   141  0000                     _RXB1CONbits	set	3888
   142  0000                     _TXB2D7	set	3853
   143  0000                     _TXB2D6	set	3852
   144  0000                     _TXB2D5	set	3851
   145  0000                     _TXB2D4	set	3850
   146  0000                     _TXB2D3	set	3849
   147  0000                     _TXB2D2	set	3848
   148  0000                     _TXB2D1	set	3847
   149  0000                     _TXB2D0	set	3846
   150  0000                     _TXB2DLC	set	3845
   151  0000                     _TXB2SIDL	set	3842
   152  0000                     _TXB2SIDH	set	3841
   153  0000                     _TXB2EIDL	set	3844
   154  0000                     _TXB2EIDH	set	3843
   155  0000                     _TXB2CONbits	set	3840
   156  0000                     _TXB1D7	set	3869
   157  0000                     _TXB1D6	set	3868
   158  0000                     _TXB1D5	set	3867
   159  0000                     _TXB1D4	set	3866
   160  0000                     _TXB1D3	set	3865
   161  0000                     _TXB1D2	set	3864
   162  0000                     _TXB1D1	set	3863
   163  0000                     _TXB1D0	set	3862
   164  0000                     _TXB1DLC	set	3861
   165  0000                     _TXB1SIDL	set	3858
   166  0000                     _TXB1SIDH	set	3857
   167  0000                     _TXB1EIDL	set	3860
   168  0000                     _TXB1EIDH	set	3859
   169  0000                     _TXB1CONbits	set	3856
   170  0000                     _TXB0D7	set	3885
   171  0000                     _TXB0D6	set	3884
   172  0000                     _TXB0D5	set	3883
   173  0000                     _TXB0D4	set	3882
   174  0000                     _TXB0D3	set	3881
   175  0000                     _TXB0D2	set	3880
   176  0000                     _TXB0D1	set	3879
   177  0000                     _TXB0D0	set	3878
   178  0000                     _TXB0DLC	set	3877
   179  0000                     _TXB0SIDL	set	3874
   180  0000                     _TXB0SIDH	set	3873
   181  0000                     _TXB0EIDL	set	3876
   182  0000                     _TXB0EIDH	set	3875
   183  0000                     _TXB0CONbits	set	3872
   184  0000                     _WPUB	set	3931
   185  0000                     _ANCON1	set	3932
   186  0000                     _ANCON0	set	3933
   187  0000                     _LATCbits	set	3979
   188  0000                     _CIOCONbits	set	3952
   189  0000                     _T0CONbits	set	4053
   190  0000                     _TMR0L	set	4054
   191  0000                     _TMR0H	set	4055
   192  0000                     _T0CON	set	4053
   193  0000                     _INTCONbits	set	4082
   194  0000                     _RCONbits	set	4048
   195  0000                     _T1GCONbits	set	4010
   196  0000                     _T1CONbits	set	4045
   197  0000                     _PIE1bits	set	3997
   198  0000                     _PIR1bits	set	3998
   199  0000                     _TMR1L	set	4046
   200  0000                     _TMR1H	set	4047
   201  0000                     _T1GCON	set	4010
   202  0000                     _T1CON	set	4045
   203  0000                     _COMSTATbits	set	3953
   204  0000                     _RXB0D7	set	3949
   205  0000                     _RXB0D6	set	3948
   206  0000                     _RXB0D5	set	3947
   207  0000                     _RXB0D4	set	3946
   208  0000                     _RXB0D3	set	3945
   209  0000                     _RXB0D2	set	3944
   210  0000                     _RXB0D1	set	3943
   211  0000                     _RXB0D0	set	3942
   212  0000                     _RXB0DLC	set	3941
   213  0000                     _RXB0SIDH	set	3937
   214  0000                     _RXB0EIDL	set	3940
   215  0000                     _RXB0EIDH	set	3939
   216  0000                     _RXB0SIDL	set	3938
   217  0000                     _RXB0CONbits	set	3936
   218  0000                     _PIE5bits	set	3958
   219  0000                     _PIR5bits	set	3959
   220  0000                     _ECANCON	set	3954
   221  0000                     _CANSTAT	set	3950
   222  0000                     _CANCON	set	3951
   223  0000                     _TXREG2	set	3961
   224  0000                     _RCREG2	set	3962
   225  0000                     _RCSTA2bits	set	4006
   226  0000                     _PIR3bits	set	4004
   227  0000                     _SPBRGH2	set	3964
   228  0000                     _SPBRG2	set	3963
   229  0000                     _TXSTA2	set	4026
   230  0000                     _RCSTA2	set	4006
   231  0000                     _BAUDCON2	set	4025
   232  0000                     _TRISD	set	3989
   233  0000                     _TRISC	set	3988
   234  0000                     _TRISB	set	3987
   235  0000                     _TRISA	set	3986
   236  0000                     _TRISE	set	3990
   237  0000                     _LATC	set	3979
   238  0000                     _LATB	set	3978
   239  0000                     _LATA	set	3977
   240  0000                     _LATD	set	3980
   241  0000                     _LATE	set	3981
   242  0000                     _REFOCON	set	3994
   243  0000                     _OSCTUNE	set	3995
   244  0000                     _OSCCON2	set	4050
   245  0000                     _OSCCON	set	4051
   246                           
   247                           ; #config settings
   248  0000                     
   249                           	psect	cinit
   250  0008C4                     __pcinit:
   251                           	opt stack 0
   252  0008C4                     start_initialization:
   253                           	opt stack 0
   254  0008C4                     __initialization:
   255                           	opt stack 0
   256                           
   257                           ; Clear objects allocated to BANK0 (18 bytes)
   258  0008C4  EE00  F060         	lfsr	0,__pbssBANK0
   259  0008C8  0E12               	movlw	18
   260  0008CA                     clear_0:
   261  0008CA  6AEE               	clrf	postinc0,c
   262  0008CC  06E8               	decf	wreg,f,c
   263  0008CE  E1FD               	bnz	clear_0
   264                           
   265                           ; Clear objects allocated to COMRAM (46 bytes)
   266  0008D0  EE00  F001         	lfsr	0,__pbssCOMRAM
   267  0008D4  0E2E               	movlw	46
   268  0008D6                     clear_1:
   269  0008D6  6AEE               	clrf	postinc0,c
   270  0008D8  06E8               	decf	wreg,f,c
   271  0008DA  E1FD               	bnz	clear_1
   272  0008DC                     end_of_initialization:
   273                           	opt stack 0
   274  0008DC                     __end_of__initialization:
   275                           	opt stack 0
   276  0008DC  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   277  0008DE  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   278  0008E0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   279  0008E2  6EF8               	movwf	tblptru,c
   280  0008E4  0100               	movlb	0
   281  0008E6  EF2F  F002         	goto	_main	;jump to C main() function
   282                           tblptru	equ	0xFF8
   283                           postinc0	equ	0xFEE
   284                           wreg	equ	0xFE8
   285                           
   286                           	psect	bssCOMRAM
   287  000001                     __pbssCOMRAM:
   288                           	opt stack 0
   289  000001                     _data:
   290                           	opt stack 0
   291  000001                     	ds	2
   292  000003                     TMR1_ISR@CountCallBack:
   293                           	opt stack 0
   294  000003                     	ds	2
   295  000005                     _send:
   296                           	opt stack 0
   297  000005                     	ds	1
   298  000006                     _canMessage:
   299                           	opt stack 0
   300  000006                     	ds	14
   301  000014                     _data3:
   302                           	opt stack 0
   303  000014                     	ds	9
   304  00001D                     _data2:
   305                           	opt stack 0
   306  00001D                     	ds	9
   307  000026                     _data1:
   308                           	opt stack 0
   309  000026                     	ds	9
   310                           tblptru	equ	0xFF8
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           
   314                           	psect	bssBANK0
   315  000060                     __pbssBANK0:
   316                           	opt stack 0
   317  000060                     _data5:
   318                           	opt stack 0
   319  000060                     	ds	9
   320  000069                     _data4:
   321                           	opt stack 0
   322  000069                     	ds	9
   323                           tblptru	equ	0xFF8
   324                           postinc0	equ	0xFEE
   325                           wreg	equ	0xFE8
   326                           
   327                           	psect	cstackBANK0
   328  000072                     __pcstackBANK0:
   329                           	opt stack 0
   330  000072                     convertReg2ExtendedCANid@tempRXBn_EIDH:
   331                           	opt stack 0
   332  000072                     convertReg2StandardCANid@tempRXBn_SIDH:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x0
   336  000072                     	ds	1
   337  000073                     convertReg2ExtendedCANid@returnValue:
   338                           	opt stack 0
   339  000073                     convertReg2StandardCANid@returnValue:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x1
   343  000073                     	ds	4
   344  000077                     convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits:
   345                           	opt stack 0
   346  000077                     convertReg2StandardCANid@ConvertedID:
   347                           	opt stack 0
   348                           
   349                           ; 4 bytes @ 0x5
   350  000077                     	ds	1
   351  000078                     convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x6
   355  000078                     	ds	1
   356  000079                     convertReg2ExtendedCANid@ConvertedID:
   357                           	opt stack 0
   358                           
   359                           ; 4 bytes @ 0x7
   360  000079                     	ds	4
   361                           tblptru	equ	0xFF8
   362                           postinc0	equ	0xFEE
   363                           wreg	equ	0xFE8
   364                           
   365                           	psect	cstackCOMRAM
   366  00002F                     __pcstackCOMRAM:
   367                           	opt stack 0
   368  00002F                     ??_INTERRUPT_InterruptManager:
   369  00002F                     
   370                           ; 1 bytes @ 0x0
   371  00002F                     	ds	14
   372  00003D                     ??_ECAN_Initialize:
   373  00003D                     ?_convertReg2ExtendedCANid:
   374                           	opt stack 0
   375  00003D                     ?_convertReg2StandardCANid:
   376                           	opt stack 0
   377  00003D                     EUSART2_Write@txData:
   378                           	opt stack 0
   379  00003D                     convertReg2ExtendedCANid@tempRXBn_EIDL:
   380                           	opt stack 0
   381  00003D                     convertReg2StandardCANid@tempRXBn_SIDL:
   382                           	opt stack 0
   383  00003D                     TMR1_SetInterruptHandler@InterruptHandler:
   384                           	opt stack 0
   385  00003D                     TMR0_SetInterruptHandler@InterruptHandler:
   386                           	opt stack 0
   387  00003D                     memcpy@d1:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0xE
   391  00003D                     	ds	1
   392  00003E                     convertReg2ExtendedCANid@tempRXBn_SIDH:
   393                           	opt stack 0
   394  00003E                     sendPacket@bytes:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0xF
   398  00003E                     	ds	1
   399  00003F                     ??_TMR1_Initialize:
   400  00003F                     ??_TMR0_Initialize:
   401  00003F                     convertReg2ExtendedCANid@tempRXBn_SIDL:
   402                           	opt stack 0
   403  00003F                     memcpy@s1:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x10
   407  00003F                     	ds	1
   408  000040                     sendPacket@i:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x11
   412  000040                     	ds	1
   413  000041                     ??_convertReg2ExtendedCANid:
   414  000041                     ??_convertReg2StandardCANid:
   415  000041                     memcpy@n:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x12
   419  000041                     	ds	2
   420  000043                     memcpy@d:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x14
   424  000043                     	ds	2
   425  000045                     CAN_receive@tempCanMsg:
   426                           	opt stack 0
   427  000045                     memcpy@s:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x16
   431  000045                     	ds	2
   432  000047                     CAN_receive@returnValue:
   433                           	opt stack 0
   434  000047                     memcpy@tmp:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x18
   438  000047                     	ds	1
   439  000048                     main@id:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x19
   443  000048                     	ds	1
   444                           tblptru	equ	0xFF8
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 33 in file "main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  id              1   25[COMRAM] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   468 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   471 ;;Total ram usage:        1 bytes
   472 ;; Hardware stack levels required when called:    8
   473 ;; This function calls:
   474 ;;		_CAN_receive
   475 ;;		_EUSART2_Initialize
   476 ;;		_SYSTEM_Initialize
   477 ;;		_TMR1_SetInterruptHandler
   478 ;;		_TMR1_StartTimer
   479 ;;		_memcpy
   480 ;;		_sendPacket
   481 ;; This function is called by:
   482 ;;		Startup code after reset
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text0
   487  00045E                     __ptext0:
   488                           	opt stack 0
   489  00045E                     _main:
   490                           	opt stack 23
   491                           
   492                           ;main.c: 35: SYSTEM_Initialize();
   493                           
   494                           ;incstack = 0
   495  00045E  EC85  F004         	call	_SYSTEM_Initialize	;wreg free
   496                           
   497                           ;main.c: 38: CIOCONbits.CLKSEL = 1;
   498  000462  8070               	bsf	3952,0,c	;volatile
   499                           
   500                           ;main.c: 39: CIOCONbits.ENDRHI = 1;
   501  000464  8A70               	bsf	3952,5,c	;volatile
   502                           
   503                           ;main.c: 41: RXB0CONbits.RXM0 = 1;
   504  000466  8A60               	bsf	3936,5,c	;volatile
   505                           
   506                           ;main.c: 42: RXB0CONbits.RXM1 = 0;
   507  000468  9C60               	bcf	3936,6,c	;volatile
   508                           
   509                           ;main.c: 43: RXB0CONbits.RB0DBEN = 0;
   510  00046A  9460               	bcf	3936,2,c	;volatile
   511                           
   512                           ;main.c: 44: RXB0CONbits.FILHIT0 = 0;
   513  00046C  9060               	bcf	3936,0,c	;volatile
   514                           
   515                           ;main.c: 46: EUSART2_Initialize();
   516  00046E  EC94  F004         	call	_EUSART2_Initialize	;wreg free
   517                           
   518                           ;main.c: 49: TMR1_SetInterruptHandler(&time_to_send);
   519  000472  0E50               	movlw	low _time_to_send
   520  000474  6E3D               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
   521  000476  0E09               	movlw	high _time_to_send
   522  000478  6E3E               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
   523  00047A  ECB5  F004         	call	_TMR1_SetInterruptHandler	;wreg free
   524  00047E  D09A               	goto	l2250
   525  000480                     l2222:
   526                           
   527                           ;main.c: 52: (INTCONbits.PEIE = 1);
   528  000480  8CF2               	bsf	intcon,6,c	;volatile
   529  000482                     l2224:
   530                           
   531                           ;main.c: 55: if (CAN_receive(&canMessage)) {
   532  000482  0E06               	movlw	low _canMessage
   533  000484  6E45               	movwf	CAN_receive@tempCanMsg,c
   534  000486  0E00               	movlw	high _canMessage
   535  000488  6E46               	movwf	CAN_receive@tempCanMsg+1,c
   536  00048A  EC4D  F000         	call	_CAN_receive	;wreg free
   537  00048E  0900               	iorlw	0
   538  000490  B4D8               	btfsc	status,2,c
   539  000492  D069               	goto	l2240
   540                           
   541                           ;main.c: 56: do { LATCbits.LATC2 = 1; } while(0);
   542  000494  848B               	bsf	3979,2,c	;volatile
   543                           
   544                           ;main.c: 57: uint8_t id = canMessage.frame.id;
   545  000496  C007  F048         	movff	_canMessage+1,main@id
   546                           
   547                           ;main.c: 58: switch(id) {
   548  00049A  D055               	goto	l2238
   549  00049C                     l583:
   550                           
   551                           ;main.c: 60: data1[0] = id;
   552  00049C  C048  F026         	movff	main@id,_data1
   553                           
   554                           ;main.c: 61: memcpy(data1+1,&(canMessage.array[6]),8);
   555  0004A0  0E27               	movlw	low (_data1+1)
   556  0004A2  6E3D               	movwf	memcpy@d1,c
   557  0004A4  0E00               	movlw	high (_data1+1)
   558  0004A6  6E3E               	movwf	memcpy@d1+1,c
   559  0004A8  0E0C               	movlw	low (_canMessage+6)
   560  0004AA  6E3F               	movwf	memcpy@s1,c
   561  0004AC  0E00               	movlw	high (_canMessage+6)
   562  0004AE  6E40               	movwf	memcpy@s1+1,c
   563  0004B0  0E00               	movlw	0
   564  0004B2  6E42               	movwf	memcpy@n+1,c
   565  0004B4  0E08               	movlw	8
   566  0004B6  6E41               	movwf	memcpy@n,c
   567  0004B8  ECA2  F003         	call	_memcpy	;wreg free
   568                           
   569                           ;main.c: 62: break;
   570  0004BC  D054               	goto	l2240
   571  0004BE                     l585:
   572                           
   573                           ;main.c: 64: data2[0] = id;
   574  0004BE  C048  F01D         	movff	main@id,_data2
   575                           
   576                           ;main.c: 65: memcpy(data2+1,&(canMessage.array[6]),8);
   577  0004C2  0E1E               	movlw	low (_data2+1)
   578  0004C4  6E3D               	movwf	memcpy@d1,c
   579  0004C6  0E00               	movlw	high (_data2+1)
   580  0004C8  6E3E               	movwf	memcpy@d1+1,c
   581  0004CA  0E0C               	movlw	low (_canMessage+6)
   582  0004CC  6E3F               	movwf	memcpy@s1,c
   583  0004CE  0E00               	movlw	high (_canMessage+6)
   584  0004D0  6E40               	movwf	memcpy@s1+1,c
   585  0004D2  0E00               	movlw	0
   586  0004D4  6E42               	movwf	memcpy@n+1,c
   587  0004D6  0E08               	movlw	8
   588  0004D8  6E41               	movwf	memcpy@n,c
   589  0004DA  ECA2  F003         	call	_memcpy	;wreg free
   590                           
   591                           ;main.c: 66: break;
   592  0004DE  D043               	goto	l2240
   593  0004E0                     l586:
   594                           
   595                           ;main.c: 68: data3[0] = id;
   596  0004E0  C048  F014         	movff	main@id,_data3
   597                           
   598                           ;main.c: 69: memcpy(data3+1,&(canMessage.array[6]),8);
   599  0004E4  0E15               	movlw	low (_data3+1)
   600  0004E6  6E3D               	movwf	memcpy@d1,c
   601  0004E8  0E00               	movlw	high (_data3+1)
   602  0004EA  6E3E               	movwf	memcpy@d1+1,c
   603  0004EC  0E0C               	movlw	low (_canMessage+6)
   604  0004EE  6E3F               	movwf	memcpy@s1,c
   605  0004F0  0E00               	movlw	high (_canMessage+6)
   606  0004F2  6E40               	movwf	memcpy@s1+1,c
   607  0004F4  0E00               	movlw	0
   608  0004F6  6E42               	movwf	memcpy@n+1,c
   609  0004F8  0E08               	movlw	8
   610  0004FA  6E41               	movwf	memcpy@n,c
   611  0004FC  ECA2  F003         	call	_memcpy	;wreg free
   612                           
   613                           ;main.c: 70: break;
   614  000500  D032               	goto	l2240
   615  000502                     l587:
   616                           
   617                           ;main.c: 72: data4[0] = id;
   618  000502  C048  F069         	movff	main@id,_data4
   619                           
   620                           ;main.c: 73: memcpy(data4+1,&(canMessage.array[6]),8);
   621  000506  0E6A               	movlw	low (_data4+1)
   622  000508  6E3D               	movwf	memcpy@d1,c
   623  00050A  0E00               	movlw	high (_data4+1)
   624  00050C  6E3E               	movwf	memcpy@d1+1,c
   625  00050E  0E0C               	movlw	low (_canMessage+6)
   626  000510  6E3F               	movwf	memcpy@s1,c
   627  000512  0E00               	movlw	high (_canMessage+6)
   628  000514  6E40               	movwf	memcpy@s1+1,c
   629  000516  0E00               	movlw	0
   630  000518  6E42               	movwf	memcpy@n+1,c
   631  00051A  0E08               	movlw	8
   632  00051C  6E41               	movwf	memcpy@n,c
   633  00051E  ECA2  F003         	call	_memcpy	;wreg free
   634                           
   635                           ;main.c: 74: break;
   636  000522  D021               	goto	l2240
   637  000524                     l588:
   638                           
   639                           ;main.c: 76: data5[0] = id;
   640  000524  C048  F060         	movff	main@id,_data5
   641                           
   642                           ;main.c: 77: memcpy(data5+1,&(canMessage.array[6]),8);
   643  000528  0E61               	movlw	low (_data5+1)
   644  00052A  6E3D               	movwf	memcpy@d1,c
   645  00052C  0E00               	movlw	high (_data5+1)
   646  00052E  6E3E               	movwf	memcpy@d1+1,c
   647  000530  0E0C               	movlw	low (_canMessage+6)
   648  000532  6E3F               	movwf	memcpy@s1,c
   649  000534  0E00               	movlw	high (_canMessage+6)
   650  000536  6E40               	movwf	memcpy@s1+1,c
   651  000538  0E00               	movlw	0
   652  00053A  6E42               	movwf	memcpy@n+1,c
   653  00053C  0E08               	movlw	8
   654  00053E  6E41               	movwf	memcpy@n,c
   655  000540  ECA2  F003         	call	_memcpy	;wreg free
   656                           
   657                           ;main.c: 79: }
   658                           
   659                           ;main.c: 78: break;
   660  000544  D010               	goto	l2240
   661  000546                     l2238:
   662  000546  5048               	movf	main@id,w,c
   663                           
   664                           ; Switch size 1, requested type "space"
   665                           ; Number of cases is 5, Range of values is 64 to 68
   666                           ; switch strategies available:
   667                           ; Name         Instructions Cycles
   668                           ; simple_byte           16     9 (average)
   669                           ;	Chosen strategy is simple_byte
   670  000548  0A40               	xorlw	64	; case 64
   671  00054A  B4D8               	btfsc	status,2,c
   672  00054C  D7A7               	goto	l583
   673  00054E  0A01               	xorlw	1	; case 65
   674  000550  B4D8               	btfsc	status,2,c
   675  000552  D7B5               	goto	l585
   676  000554  0A03               	xorlw	3	; case 66
   677  000556  B4D8               	btfsc	status,2,c
   678  000558  D7C3               	goto	l586
   679  00055A  0A01               	xorlw	1	; case 67
   680  00055C  B4D8               	btfsc	status,2,c
   681  00055E  D7D1               	goto	l587
   682  000560  0A07               	xorlw	7	; case 68
   683  000562  B4D8               	btfsc	status,2,c
   684  000564  D7DF               	goto	l588
   685  000566                     l2240:
   686                           
   687                           ;main.c: 80: }
   688                           ;main.c: 82: if(send) {
   689  000566  5005               	movf	_send,w,c
   690  000568  B4D8               	btfsc	status,2,c
   691  00056A  D78B               	goto	l2224
   692                           
   693                           ;main.c: 83: (INTCONbits.GIE = 0);
   694  00056C  9EF2               	bcf	intcon,7,c	;volatile
   695                           
   696                           ;main.c: 84: (INTCONbits.PEIE = 0);
   697  00056E  9CF2               	bcf	intcon,6,c	;volatile
   698                           
   699                           ;main.c: 85: sendPacket(data1);
   700  000570  0E26               	movlw	low _data1
   701  000572  6E3E               	movwf	sendPacket@bytes,c
   702  000574  0E00               	movlw	high _data1
   703  000576  6E3F               	movwf	sendPacket@bytes+1,c
   704  000578  ECC4  F003         	call	_sendPacket	;wreg free
   705                           
   706                           ;main.c: 86: sendPacket(data2);
   707  00057C  0E1D               	movlw	low _data2
   708  00057E  6E3E               	movwf	sendPacket@bytes,c
   709  000580  0E00               	movlw	high _data2
   710  000582  6E3F               	movwf	sendPacket@bytes+1,c
   711  000584  ECC4  F003         	call	_sendPacket	;wreg free
   712                           
   713                           ;main.c: 87: sendPacket(data3);
   714  000588  0E14               	movlw	low _data3
   715  00058A  6E3E               	movwf	sendPacket@bytes,c
   716  00058C  0E00               	movlw	high _data3
   717  00058E  6E3F               	movwf	sendPacket@bytes+1,c
   718  000590  ECC4  F003         	call	_sendPacket	;wreg free
   719                           
   720                           ;main.c: 88: sendPacket(data4);
   721  000594  0E69               	movlw	low _data4
   722  000596  6E3E               	movwf	sendPacket@bytes,c
   723  000598  0E00               	movlw	high _data4
   724  00059A  6E3F               	movwf	sendPacket@bytes+1,c
   725  00059C  ECC4  F003         	call	_sendPacket	;wreg free
   726                           
   727                           ;main.c: 89: sendPacket(data5);
   728  0005A0  0E60               	movlw	low _data5
   729  0005A2  6E3E               	movwf	sendPacket@bytes,c
   730  0005A4  0E00               	movlw	high _data5
   731  0005A6  6E3F               	movwf	sendPacket@bytes+1,c
   732  0005A8  ECC4  F003         	call	_sendPacket	;wreg free
   733                           
   734                           ;main.c: 90: send = 0;
   735  0005AC  0E00               	movlw	0
   736  0005AE  6E05               	movwf	_send,c
   737                           
   738                           ;main.c: 91: TMR1_StartTimer();
   739  0005B0  ECBF  F004         	call	_TMR1_StartTimer	;wreg free
   740  0005B4                     l2250:
   741                           
   742                           ;main.c: 92: (INTCONbits.GIE = 1);
   743  0005B4  8EF2               	bsf	intcon,7,c	;volatile
   744  0005B6  D764               	goto	l2222
   745  0005B8                     __end_of_main:
   746                           	opt stack 0
   747                           tblptru	equ	0xFF8
   748                           intcon	equ	0xFF2
   749                           postinc0	equ	0xFEE
   750                           wreg	equ	0xFE8
   751                           status	equ	0xFD8
   752                           
   753 ;; *************** function _sendPacket *****************
   754 ;; Defined at:
   755 ;;		line 98 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;  bytes           2   15[COMRAM] PTR unsigned char 
   758 ;;		 -> data5(9), data4(9), data3(9), data2(9), 
   759 ;;		 -> data1(9), 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  i               2   17[COMRAM] int 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   771 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   774 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   775 ;;Total ram usage:        4 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    6
   778 ;; This function calls:
   779 ;;		_EUSART2_Write
   780 ;; This function is called by:
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text1
   786  000788                     __ptext1:
   787                           	opt stack 0
   788  000788                     _sendPacket:
   789                           	opt stack 24
   790                           
   791                           ;main.c: 99: EUSART2_Write(0xFE);
   792                           
   793                           ;incstack = 0
   794  000788  0EFE               	movlw	254
   795  00078A  ECAF  F004         	call	_EUSART2_Write
   796                           
   797                           ;main.c: 100: for (int i = 0; i < 9; ++i) {
   798  00078E  0E00               	movlw	0
   799  000790  6E41               	movwf	sendPacket@i+1,c
   800  000792  0E00               	movlw	0
   801  000794  6E40               	movwf	sendPacket@i,c
   802  000796                     l2010:
   803  000796  BE41               	btfsc	sendPacket@i+1,7,c
   804  000798  D006               	goto	l2014
   805  00079A  5041               	movf	sendPacket@i+1,w,c
   806  00079C  E110               	bnz	l2020
   807  00079E  0E09               	movlw	9
   808  0007A0  5C40               	subwf	sendPacket@i,w,c
   809  0007A2  B0D8               	btfsc	status,0,c
   810  0007A4  D00C               	goto	l2020
   811  0007A6                     l2014:
   812                           
   813                           ;main.c: 101: EUSART2_Write(*(bytes+i));
   814  0007A6  5040               	movf	sendPacket@i,w,c
   815  0007A8  243E               	addwf	sendPacket@bytes,w,c
   816  0007AA  6ED9               	movwf	fsr2l,c
   817  0007AC  5041               	movf	sendPacket@i+1,w,c
   818  0007AE  203F               	addwfc	sendPacket@bytes+1,w,c
   819  0007B0  6EDA               	movwf	fsr2h,c
   820  0007B2  50DF               	movf	indf2,w,c
   821  0007B4  ECAF  F004         	call	_EUSART2_Write
   822  0007B8  4A40               	infsnz	sendPacket@i,f,c
   823  0007BA  2A41               	incf	sendPacket@i+1,f,c
   824  0007BC  D7EC               	goto	l2010
   825  0007BE                     l2020:
   826                           
   827                           ;main.c: 102: }
   828                           ;main.c: 103: EUSART2_Write(0X7E);
   829  0007BE  0E7E               	movlw	126
   830  0007C0  ECAF  F004         	call	_EUSART2_Write
   831  0007C4  0012               	return		;funcret
   832  0007C6                     __end_of_sendPacket:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           intcon	equ	0xFF2
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           indf2	equ	0xFDF
   839                           fsr2h	equ	0xFDA
   840                           fsr2l	equ	0xFD9
   841                           status	equ	0xFD8
   842                           
   843 ;; *************** function _EUSART2_Write *****************
   844 ;; Defined at:
   845 ;;		line 96 in file "mcc_generated_files/eusart2.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  txData          1    wreg     unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  txData          1   14[COMRAM] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;Total ram usage:        1 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    5
   866 ;; This function calls:
   867 ;;		Nothing
   868 ;; This function is called by:
   869 ;;		_sendPacket
   870 ;;		_sendPacket_id
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text2
   875  00095E                     __ptext2:
   876                           	opt stack 0
   877  00095E                     _EUSART2_Write:
   878                           	opt stack 24
   879                           
   880                           ;incstack = 0
   881                           ;EUSART2_Write@txData stored from wreg
   882  00095E  6E3D               	movwf	EUSART2_Write@txData,c
   883  000960                     l91:
   884  000960  A8A4               	btfss	4004,4,c	;volatile
   885  000962  D7FE               	goto	l91
   886                           
   887                           ;eusart2.c: 100: }
   888                           ;eusart2.c: 102: TXREG2 = txData;
   889  000964  C03D  FF79         	movff	EUSART2_Write@txData,3961	;volatile
   890  000968  0012               	return		;funcret
   891  00096A                     __end_of_EUSART2_Write:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           intcon	equ	0xFF2
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           indf2	equ	0xFDF
   898                           fsr2h	equ	0xFDA
   899                           fsr2l	equ	0xFD9
   900                           status	equ	0xFD8
   901                           
   902 ;; *************** function _memcpy *****************
   903 ;; Defined at:
   904 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\memcpy.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  d1              2   14[COMRAM] PTR void 
   907 ;;		 -> data5(9), data4(9), data3(9), data2(9), 
   908 ;;		 -> data1(9), 
   909 ;;  s1              2   16[COMRAM] PTR const void 
   910 ;;		 -> canMessage(14), 
   911 ;;  n               2   18[COMRAM] unsigned int 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  s               2   22[COMRAM] PTR const unsigned char 
   914 ;;		 -> canMessage(14), 
   915 ;;  d               2   20[COMRAM] PTR unsigned char 
   916 ;;		 -> data5(9), data4(9), data3(9), data2(9), 
   917 ;;		 -> data1(9), 
   918 ;;  tmp             1   24[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2   14[COMRAM] PTR void 
   921 ;; Registers used:
   922 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   928 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   929 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   931 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   932 ;;Total ram usage:       11 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    5
   935 ;; This function calls:
   936 ;;		Nothing
   937 ;; This function is called by:
   938 ;;		_main
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text3
   943  000744                     __ptext3:
   944                           	opt stack 0
   945  000744                     _memcpy:
   946                           	opt stack 25
   947                           
   948                           ;incstack = 0
   949  000744  C03F  F045         	movff	memcpy@s1,memcpy@s
   950  000748  C040  F046         	movff	memcpy@s1+1,memcpy@s+1
   951  00074C  C03D  F043         	movff	memcpy@d1,memcpy@d
   952  000750  C03E  F044         	movff	memcpy@d1+1,memcpy@d+1
   953  000754  D010               	goto	l2004
   954  000756                     l1996:
   955  000756  C045  FFD9         	movff	memcpy@s,fsr2l
   956  00075A  C046  FFDA         	movff	memcpy@s+1,fsr2h
   957  00075E  50DF               	movf	indf2,w,c
   958  000760  6E47               	movwf	memcpy@tmp,c
   959  000762  4A45               	infsnz	memcpy@s,f,c
   960  000764  2A46               	incf	memcpy@s+1,f,c
   961  000766  C043  FFD9         	movff	memcpy@d,fsr2l
   962  00076A  C044  FFDA         	movff	memcpy@d+1,fsr2h
   963  00076E  C047  FFDF         	movff	memcpy@tmp,indf2
   964  000772  4A43               	infsnz	memcpy@d,f,c
   965  000774  2A44               	incf	memcpy@d+1,f,c
   966  000776                     l2004:
   967  000776  0641               	decf	memcpy@n,f,c
   968  000778  A0D8               	btfss	status,0,c
   969  00077A  0642               	decf	memcpy@n+1,f,c
   970  00077C  2841               	incf	memcpy@n,w,c
   971  00077E  E1EB               	bnz	l1996
   972  000780  2842               	incf	memcpy@n+1,w,c
   973  000782  B4D8               	btfsc	status,2,c
   974  000784  0012               	return	
   975  000786  D7E7               	goto	l1996
   976  000788                     __end_of_memcpy:
   977                           	opt stack 0
   978                           tblptru	equ	0xFF8
   979                           intcon	equ	0xFF2
   980                           postinc0	equ	0xFEE
   981                           wreg	equ	0xFE8
   982                           indf2	equ	0xFDF
   983                           fsr2h	equ	0xFDA
   984                           fsr2l	equ	0xFD9
   985                           status	equ	0xFD8
   986                           
   987 ;; *************** function _SYSTEM_Initialize *****************
   988 ;; Defined at:
   989 ;;		line 111 in file "mcc_generated_files/mcc.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    7
  1010 ;; This function calls:
  1011 ;;		_ECAN_Initialize
  1012 ;;		_EUSART2_Initialize
  1013 ;;		_INTERRUPT_Initialize
  1014 ;;		_OSCILLATOR_Initialize
  1015 ;;		_PIN_MANAGER_Initialize
  1016 ;;		_TMR0_Initialize
  1017 ;;		_TMR1_Initialize
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           	psect	text4
  1024  00090A                     __ptext4:
  1025                           	opt stack 0
  1026  00090A                     _SYSTEM_Initialize:
  1027                           	opt stack 23
  1028                           
  1029                           ;mcc.c: 114: INTERRUPT_Initialize();
  1030                           
  1031                           ;incstack = 0
  1032  00090A  ECC3  F004         	call	_INTERRUPT_Initialize	;wreg free
  1033                           
  1034                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  1035  00090E  EC1D  F004         	call	_PIN_MANAGER_Initialize	;wreg free
  1036                           
  1037                           ;mcc.c: 116: OSCILLATOR_Initialize();
  1038  000912  EC9F  F004         	call	_OSCILLATOR_Initialize	;wreg free
  1039                           
  1040                           ;mcc.c: 117: TMR1_Initialize();
  1041  000916  ECE3  F003         	call	_TMR1_Initialize	;wreg free
  1042                           
  1043                           ;mcc.c: 118: TMR0_Initialize();
  1044  00091A  EC01  F004         	call	_TMR0_Initialize	;wreg free
  1045                           
  1046                           ;mcc.c: 119: EUSART2_Initialize();
  1047  00091E  EC94  F004         	call	_EUSART2_Initialize	;wreg free
  1048                           
  1049                           ;mcc.c: 120: ECAN_Initialize();
  1050  000922  ECDC  F002         	call	_ECAN_Initialize	;wreg free
  1051  000926  0012               	return		;funcret
  1052  000928                     __end_of_SYSTEM_Initialize:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           intcon	equ	0xFF2
  1056                           postinc0	equ	0xFEE
  1057                           wreg	equ	0xFE8
  1058                           indf2	equ	0xFDF
  1059                           fsr2h	equ	0xFDA
  1060                           fsr2l	equ	0xFD9
  1061                           status	equ	0xFD8
  1062                           
  1063 ;; *************** function _TMR1_Initialize *****************
  1064 ;; Defined at:
  1065 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1082 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1083 ;;Total ram usage:        2 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    6
  1086 ;; This function calls:
  1087 ;;		_TMR1_SetInterruptHandler
  1088 ;;		_TMR1_StartTimer
  1089 ;; This function is called by:
  1090 ;;		_SYSTEM_Initialize
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text5
  1095  0007C6                     __ptext5:
  1096                           	opt stack 0
  1097  0007C6                     _TMR1_Initialize:
  1098                           	opt stack 23
  1099                           
  1100                           ;tmr1.c: 68: T1CON = 0x30;
  1101                           
  1102                           ;incstack = 0
  1103  0007C6  0E30               	movlw	48
  1104  0007C8  6ECD               	movwf	4045,c	;volatile
  1105                           
  1106                           ;tmr1.c: 71: T1GCON = 0x00;
  1107  0007CA  0E00               	movlw	0
  1108  0007CC  6EAA               	movwf	4010,c	;volatile
  1109                           
  1110                           ;tmr1.c: 74: TMR1H = 0x8A;
  1111  0007CE  0E8A               	movlw	138
  1112  0007D0  6ECF               	movwf	4047,c	;volatile
  1113                           
  1114                           ;tmr1.c: 77: TMR1L = 0xD0;
  1115  0007D2  0ED0               	movlw	208
  1116  0007D4  6ECE               	movwf	4046,c	;volatile
  1117                           
  1118                           ;tmr1.c: 80: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  1119  0007D6  50CE               	movf	4046,w,c	;volatile
  1120  0007D8  CFCF F03F          	movff	4047,??_TMR1_Initialize	;volatile
  1121  0007DC  6A40               	clrf	(??_TMR1_Initialize+1)& (0+255),c
  1122  0007DE  C03F  F040         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  1123  0007E2  6A3F               	clrf	??_TMR1_Initialize,c
  1124  0007E4  103F               	iorwf	??_TMR1_Initialize,w,c
  1125  0007E6  6E4F               	movwf	_timer1ReloadVal,c	;volatile
  1126  0007E8  5040               	movf	??_TMR1_Initialize+1,w,c
  1127  0007EA  6E50               	movwf	_timer1ReloadVal+1,c	;volatile
  1128                           
  1129                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
  1130  0007EC  909E               	bcf	3998,0,c	;volatile
  1131                           
  1132                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
  1133  0007EE  809D               	bsf	3997,0,c	;volatile
  1134                           
  1135                           ;tmr1.c: 89: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  1136  0007F0  0E8E               	movlw	low _TMR1_DefaultInterruptHandler
  1137  0007F2  6E3D               	movwf	TMR1_SetInterruptHandler@InterruptHandler,c
  1138  0007F4  0E09               	movlw	high _TMR1_DefaultInterruptHandler
  1139  0007F6  6E3E               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1,c
  1140  0007F8  ECB5  F004         	call	_TMR1_SetInterruptHandler	;wreg free
  1141                           
  1142                           ;tmr1.c: 92: TMR1_StartTimer();
  1143  0007FC  ECBF  F004         	call	_TMR1_StartTimer	;wreg free
  1144  000800  0012               	return		;funcret
  1145  000802                     __end_of_TMR1_Initialize:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           intcon	equ	0xFF2
  1149                           postinc0	equ	0xFEE
  1150                           wreg	equ	0xFE8
  1151                           indf2	equ	0xFDF
  1152                           fsr2h	equ	0xFDA
  1153                           fsr2l	equ	0xFD9
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _TMR1_StartTimer *****************
  1157 ;; Defined at:
  1158 ;;		line 95 in file "mcc_generated_files/tmr1.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		None
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    5
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_TMR1_Initialize
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text6
  1188  00097E                     __ptext6:
  1189                           	opt stack 0
  1190  00097E                     _TMR1_StartTimer:
  1191                           	opt stack 25
  1192                           
  1193                           ;tmr1.c: 98: T1CONbits.TMR1ON = 1;
  1194                           
  1195                           ;incstack = 0
  1196  00097E  80CD               	bsf	4045,0,c	;volatile
  1197  000980  0012               	return		;funcret
  1198  000982                     __end_of_TMR1_StartTimer:
  1199                           	opt stack 0
  1200                           tblptru	equ	0xFF8
  1201                           intcon	equ	0xFF2
  1202                           postinc0	equ	0xFEE
  1203                           wreg	equ	0xFE8
  1204                           indf2	equ	0xFDF
  1205                           fsr2h	equ	0xFDA
  1206                           fsr2l	equ	0xFD9
  1207                           status	equ	0xFD8
  1208                           
  1209 ;; *************** function _TMR1_SetInterruptHandler *****************
  1210 ;; Defined at:
  1211 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  1214 ;;		 -> time_to_send(1), TMR1_DefaultInterruptHandler(1), 
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;Total ram usage:        2 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    5
  1233 ;; This function calls:
  1234 ;;		Nothing
  1235 ;; This function is called by:
  1236 ;;		_TMR1_Initialize
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text7
  1242  00096A                     __ptext7:
  1243                           	opt stack 0
  1244  00096A                     _TMR1_SetInterruptHandler:
  1245                           	opt stack 25
  1246                           
  1247                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
  1248                           
  1249                           ;incstack = 0
  1250  00096A  C03D  F04D         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  1251  00096E  C03E  F04E         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  1252  000972  0012               	return		;funcret
  1253  000974                     __end_of_TMR1_SetInterruptHandler:
  1254                           	opt stack 0
  1255                           tblptru	equ	0xFF8
  1256                           intcon	equ	0xFF2
  1257                           postinc0	equ	0xFEE
  1258                           wreg	equ	0xFE8
  1259                           indf2	equ	0xFDF
  1260                           fsr2h	equ	0xFDA
  1261                           fsr2l	equ	0xFD9
  1262                           status	equ	0xFD8
  1263                           
  1264 ;; *************** function _TMR0_Initialize *****************
  1265 ;; Defined at:
  1266 ;;		line 66 in file "mcc_generated_files/tmr0.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;		None
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;		None
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  1    wreg      void 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0, cstack
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1282 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1283 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1284 ;;Total ram usage:        2 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; Hardware stack levels required when called:    6
  1287 ;; This function calls:
  1288 ;;		_TMR0_SetInterruptHandler
  1289 ;;		_TMR0_StartTimer
  1290 ;; This function is called by:
  1291 ;;		_SYSTEM_Initialize
  1292 ;; This function uses a non-reentrant model
  1293 ;;
  1294                           
  1295                           	psect	text8
  1296  000802                     __ptext8:
  1297                           	opt stack 0
  1298  000802                     _TMR0_Initialize:
  1299                           	opt stack 23
  1300                           
  1301                           ;tmr0.c: 71: T0CON = 0x12;
  1302                           
  1303                           ;incstack = 0
  1304  000802  0E12               	movlw	18
  1305  000804  6ED5               	movwf	4053,c	;volatile
  1306                           
  1307                           ;tmr0.c: 74: TMR0H = 0xD8;
  1308  000806  0ED8               	movlw	216
  1309  000808  6ED7               	movwf	4055,c	;volatile
  1310                           
  1311                           ;tmr0.c: 77: TMR0L = 0xEF;
  1312  00080A  0EEF               	movlw	239
  1313  00080C  6ED6               	movwf	4054,c	;volatile
  1314                           
  1315                           ;tmr0.c: 80: timer0ReloadVal = (TMR0H << 8) | TMR0L;
  1316  00080E  50D6               	movf	4054,w,c	;volatile
  1317  000810  CFD7 F03F          	movff	4055,??_TMR0_Initialize	;volatile
  1318  000814  6A40               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1319  000816  C03F  F040         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1320  00081A  6A3F               	clrf	??_TMR0_Initialize,c
  1321  00081C  103F               	iorwf	??_TMR0_Initialize,w,c
  1322  00081E  6E49               	movwf	_timer0ReloadVal,c	;volatile
  1323  000820  5040               	movf	??_TMR0_Initialize+1,w,c
  1324  000822  6E4A               	movwf	_timer0ReloadVal+1,c	;volatile
  1325                           
  1326                           ;tmr0.c: 83: INTCONbits.TMR0IF = 0;
  1327  000824  94F2               	bcf	intcon,2,c	;volatile
  1328                           
  1329                           ;tmr0.c: 86: INTCONbits.TMR0IE = 1;
  1330  000826  8AF2               	bsf	intcon,5,c	;volatile
  1331                           
  1332                           ;tmr0.c: 89: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1333  000828  0E90               	movlw	low _TMR0_DefaultInterruptHandler
  1334  00082A  6E3D               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1335  00082C  0E09               	movlw	high _TMR0_DefaultInterruptHandler
  1336  00082E  6E3E               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1337  000830  ECBA  F004         	call	_TMR0_SetInterruptHandler	;wreg free
  1338                           
  1339                           ;tmr0.c: 92: TMR0_StartTimer();
  1340  000834  ECC1  F004         	call	_TMR0_StartTimer	;wreg free
  1341  000838  0012               	return		;funcret
  1342  00083A                     __end_of_TMR0_Initialize:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           intcon	equ	0xFF2
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           indf2	equ	0xFDF
  1349                           fsr2h	equ	0xFDA
  1350                           fsr2l	equ	0xFD9
  1351                           status	equ	0xFD8
  1352                           
  1353 ;; *************** function _TMR0_StartTimer *****************
  1354 ;; Defined at:
  1355 ;;		line 95 in file "mcc_generated_files/tmr0.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;		None
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      void 
  1362 ;; Registers used:
  1363 ;;		None
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1373 ;;Total ram usage:        0 bytes
  1374 ;; Hardware stack levels used:    1
  1375 ;; Hardware stack levels required when called:    5
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_TMR0_Initialize
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text9
  1384  000982                     __ptext9:
  1385                           	opt stack 0
  1386  000982                     _TMR0_StartTimer:
  1387                           	opt stack 23
  1388                           
  1389                           ;tmr0.c: 98: T0CONbits.TMR0ON = 1;
  1390                           
  1391                           ;incstack = 0
  1392  000982  8ED5               	bsf	4053,7,c	;volatile
  1393  000984  0012               	return		;funcret
  1394  000986                     __end_of_TMR0_StartTimer:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           intcon	equ	0xFF2
  1398                           postinc0	equ	0xFEE
  1399                           wreg	equ	0xFE8
  1400                           indf2	equ	0xFDF
  1401                           fsr2h	equ	0xFDA
  1402                           fsr2l	equ	0xFD9
  1403                           status	equ	0xFD8
  1404                           
  1405 ;; *************** function _TMR0_SetInterruptHandler *****************
  1406 ;; Defined at:
  1407 ;;		line 154 in file "mcc_generated_files/tmr0.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  InterruptHan    2   14[COMRAM] PTR FTN()void 
  1410 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    5
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_TMR0_Initialize
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text10
  1437  000974                     __ptext10:
  1438                           	opt stack 0
  1439  000974                     _TMR0_SetInterruptHandler:
  1440                           	opt stack 23
  1441                           
  1442                           ;tmr0.c: 155: TMR0_InterruptHandler = InterruptHandler;
  1443                           
  1444                           ;incstack = 0
  1445  000974  C03D  F04B         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1446  000978  C03E  F04C         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1447  00097C  0012               	return		;funcret
  1448  00097E                     __end_of_TMR0_SetInterruptHandler:
  1449                           	opt stack 0
  1450                           tblptru	equ	0xFF8
  1451                           intcon	equ	0xFF2
  1452                           postinc0	equ	0xFEE
  1453                           wreg	equ	0xFE8
  1454                           indf2	equ	0xFDF
  1455                           fsr2h	equ	0xFDA
  1456                           fsr2l	equ	0xFD9
  1457                           status	equ	0xFD8
  1458                           
  1459 ;; *************** function _PIN_MANAGER_Initialize *****************
  1460 ;; Defined at:
  1461 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, status,2
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    5
  1482 ;; This function calls:
  1483 ;;		Nothing
  1484 ;; This function is called by:
  1485 ;;		_SYSTEM_Initialize
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           	psect	text11
  1490  00083A                     __ptext11:
  1491                           	opt stack 0
  1492  00083A                     _PIN_MANAGER_Initialize:
  1493                           	opt stack 24
  1494                           
  1495                           ;pin_manager.c: 57: LATE = 0x00;
  1496                           
  1497                           ;incstack = 0
  1498  00083A  0E00               	movlw	0
  1499  00083C  6E8D               	movwf	3981,c	;volatile
  1500                           
  1501                           ;pin_manager.c: 58: LATD = 0x00;
  1502  00083E  0E00               	movlw	0
  1503  000840  6E8C               	movwf	3980,c	;volatile
  1504                           
  1505                           ;pin_manager.c: 59: LATA = 0x00;
  1506  000842  0E00               	movlw	0
  1507  000844  6E89               	movwf	3977,c	;volatile
  1508                           
  1509                           ;pin_manager.c: 60: LATB = 0x03;
  1510  000846  0E03               	movlw	3
  1511  000848  6E8A               	movwf	3978,c	;volatile
  1512                           
  1513                           ;pin_manager.c: 61: LATC = 0xC0;
  1514  00084A  0EC0               	movlw	192
  1515  00084C  6E8B               	movwf	3979,c	;volatile
  1516                           
  1517                           ;pin_manager.c: 66: TRISE = 0x07;
  1518  00084E  0E07               	movlw	7
  1519  000850  6E96               	movwf	3990,c	;volatile
  1520                           
  1521                           ;pin_manager.c: 67: TRISA = 0xEF;
  1522  000852  0EEF               	movlw	239
  1523  000854  6E92               	movwf	3986,c	;volatile
  1524                           
  1525                           ;pin_manager.c: 68: TRISB = 0xFB;
  1526  000856  0EFB               	movlw	251
  1527  000858  6E93               	movwf	3987,c	;volatile
  1528                           
  1529                           ;pin_manager.c: 69: TRISC = 0xFB;
  1530  00085A  0EFB               	movlw	251
  1531  00085C  6E94               	movwf	3988,c	;volatile
  1532                           
  1533                           ;pin_manager.c: 70: TRISD = 0xBF;
  1534  00085E  0EBF               	movlw	191
  1535  000860  6E95               	movwf	3989,c	;volatile
  1536                           
  1537                           ;pin_manager.c: 75: ANCON0 = 0xFF;
  1538  000862  010F               	movlb	15	; () banked
  1539  000864  695D               	setf	93,b	;volatile
  1540                           
  1541                           ;pin_manager.c: 76: ANCON1 = 0x7A;
  1542  000866  0E7A               	movlw	122
  1543  000868  010F               	movlb	15	; () banked
  1544  00086A  6F5C               	movwf	92,b	;volatile
  1545                           
  1546                           ; BSR set to: 15
  1547                           ;pin_manager.c: 81: WPUB = 0xFF;
  1548  00086C  010F               	movlb	15	; () banked
  1549  00086E  695B               	setf	91,b	;volatile
  1550                           
  1551                           ; BSR set to: 15
  1552  000870  0012               	return		;funcret
  1553  000872                     __end_of_PIN_MANAGER_Initialize:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           intcon	equ	0xFF2
  1557                           postinc0	equ	0xFEE
  1558                           wreg	equ	0xFE8
  1559                           indf2	equ	0xFDF
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8
  1563                           
  1564 ;; *************** function _OSCILLATOR_Initialize *****************
  1565 ;; Defined at:
  1566 ;;		line 123 in file "mcc_generated_files/mcc.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    5
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_SYSTEM_Initialize
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text12
  1595  00093E                     __ptext12:
  1596                           	opt stack 0
  1597  00093E                     _OSCILLATOR_Initialize:
  1598                           	opt stack 24
  1599                           
  1600                           ;mcc.c: 126: OSCCON = 0x70;
  1601                           
  1602                           ; BSR set to: 15
  1603                           ;incstack = 0
  1604  00093E  0E70               	movlw	112
  1605  000940  6ED3               	movwf	4051,c	;volatile
  1606                           
  1607                           ;mcc.c: 128: OSCCON2 = 0x00;
  1608  000942  0E00               	movlw	0
  1609  000944  6ED2               	movwf	4050,c	;volatile
  1610                           
  1611                           ;mcc.c: 130: OSCTUNE = 0x00;
  1612  000946  0E00               	movlw	0
  1613  000948  6E9B               	movwf	3995,c	;volatile
  1614                           
  1615                           ;mcc.c: 132: REFOCON = 0x00;
  1616  00094A  0E00               	movlw	0
  1617  00094C  6E9A               	movwf	3994,c	;volatile
  1618  00094E  0012               	return		;funcret
  1619  000950                     __end_of_OSCILLATOR_Initialize:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           intcon	equ	0xFF2
  1623                           postinc0	equ	0xFEE
  1624                           wreg	equ	0xFE8
  1625                           indf2	equ	0xFDF
  1626                           fsr2h	equ	0xFDA
  1627                           fsr2l	equ	0xFD9
  1628                           status	equ	0xFD8
  1629                           
  1630 ;; *************** function _INTERRUPT_Initialize *****************
  1631 ;; Defined at:
  1632 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  1633 ;; Parameters:    Size  Location     Type
  1634 ;;		None
  1635 ;; Auto vars:     Size  Location     Type
  1636 ;;		None
  1637 ;; Return value:  Size  Location     Type
  1638 ;;                  1    wreg      void 
  1639 ;; Registers used:
  1640 ;;		None
  1641 ;; Tracked objects:
  1642 ;;		On entry : 0/0
  1643 ;;		On exit  : 0/0
  1644 ;;		Unchanged: 0/0
  1645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1650 ;;Total ram usage:        0 bytes
  1651 ;; Hardware stack levels used:    1
  1652 ;; Hardware stack levels required when called:    5
  1653 ;; This function calls:
  1654 ;;		Nothing
  1655 ;; This function is called by:
  1656 ;;		_SYSTEM_Initialize
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text13
  1661  000986                     __ptext13:
  1662                           	opt stack 0
  1663  000986                     _INTERRUPT_Initialize:
  1664                           	opt stack 24
  1665                           
  1666                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  1667                           
  1668                           ;incstack = 0
  1669  000986  9ED0               	bcf	4048,7,c	;volatile
  1670  000988  0012               	return		;funcret
  1671  00098A                     __end_of_INTERRUPT_Initialize:
  1672                           	opt stack 0
  1673                           tblptru	equ	0xFF8
  1674                           intcon	equ	0xFF2
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           indf2	equ	0xFDF
  1678                           fsr2h	equ	0xFDA
  1679                           fsr2l	equ	0xFD9
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function _EUSART2_Initialize *****************
  1683 ;; Defined at:
  1684 ;;		line 55 in file "mcc_generated_files/eusart2.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;		None
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1702 ;;Total ram usage:        0 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    5
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_SYSTEM_Initialize
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713                           	psect	text14
  1714  000928                     __ptext14:
  1715                           	opt stack 0
  1716  000928                     _EUSART2_Initialize:
  1717                           	opt stack 24
  1718                           
  1719                           ;eusart2.c: 60: BAUDCON2 = 0x08;
  1720                           
  1721                           ;incstack = 0
  1722  000928  0E08               	movlw	8
  1723  00092A  6EB9               	movwf	4025,c	;volatile
  1724                           
  1725                           ;eusart2.c: 63: RCSTA2 = 0x90;
  1726  00092C  0E90               	movlw	144
  1727  00092E  6EA6               	movwf	4006,c	;volatile
  1728                           
  1729                           ;eusart2.c: 66: TXSTA2 = 0x26;
  1730  000930  0E26               	movlw	38
  1731  000932  6EBA               	movwf	4026,c	;volatile
  1732                           
  1733                           ;eusart2.c: 69: SPBRG2 = 0x8A;
  1734  000934  0E8A               	movlw	138
  1735  000936  6E7B               	movwf	3963,c	;volatile
  1736                           
  1737                           ;eusart2.c: 72: SPBRGH2 = 0x00;
  1738  000938  0E00               	movlw	0
  1739  00093A  6E7C               	movwf	3964,c	;volatile
  1740  00093C  0012               	return		;funcret
  1741  00093E                     __end_of_EUSART2_Initialize:
  1742                           	opt stack 0
  1743                           tblptru	equ	0xFF8
  1744                           intcon	equ	0xFF2
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           indf2	equ	0xFDF
  1748                           fsr2h	equ	0xFDA
  1749                           fsr2l	equ	0xFD9
  1750                           status	equ	0xFD8
  1751                           
  1752 ;; *************** function _ECAN_Initialize *****************
  1753 ;; Defined at:
  1754 ;;		line 63 in file "mcc_generated_files/ecan.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1772 ;;Total ram usage:        1 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    5
  1775 ;; This function calls:
  1776 ;;		Nothing
  1777 ;; This function is called by:
  1778 ;;		_SYSTEM_Initialize
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text15
  1783  0005B8                     __ptext15:
  1784                           	opt stack 0
  1785  0005B8                     _ECAN_Initialize:
  1786                           	opt stack 24
  1787                           
  1788                           ;ecan.c: 65: CANCON = 0x80;
  1789                           
  1790                           ;incstack = 0
  1791  0005B8  0E80               	movlw	128
  1792  0005BA  6E6F               	movwf	3951,c	;volatile
  1793  0005BC                     l1852:
  1794  0005BC  506E               	movf	3950,w,c	;volatile
  1795  0005BE  0BE0               	andlw	224
  1796  0005C0  0A80               	xorlw	128
  1797  0005C2  A4D8               	btfss	status,2,c
  1798  0005C4  D7FB               	goto	l1852
  1799                           
  1800                           ;ecan.c: 71: ECANCON = 0x00;
  1801  0005C6  0E00               	movlw	0
  1802  0005C8  6E72               	movwf	3954,c	;volatile
  1803                           
  1804                           ;ecan.c: 88: RXM0EIDH = 0x00;
  1805  0005CA  0E00               	movlw	0
  1806  0005CC  010E               	movlb	14	; () banked
  1807  0005CE  6FFA               	movwf	250,b	;volatile
  1808                           
  1809                           ;ecan.c: 89: RXM0EIDL = 0x00;
  1810  0005D0  0E00               	movlw	0
  1811  0005D2  010E               	movlb	14	; () banked
  1812  0005D4  6FFB               	movwf	251,b	;volatile
  1813                           
  1814                           ;ecan.c: 90: RXM0SIDH = 0x00;
  1815  0005D6  0E00               	movlw	0
  1816  0005D8  010E               	movlb	14	; () banked
  1817  0005DA  6FF8               	movwf	248,b	;volatile
  1818                           
  1819                           ;ecan.c: 91: RXM0SIDL = 0x00;
  1820  0005DC  0E00               	movlw	0
  1821  0005DE  010E               	movlb	14	; () banked
  1822  0005E0  6FF9               	movwf	249,b	;volatile
  1823                           
  1824                           ; BSR set to: 14
  1825                           ;ecan.c: 93: RXM1EIDH = 0xFF;
  1826  0005E2  010E               	movlb	14	; () banked
  1827  0005E4  69FE               	setf	254,b	;volatile
  1828                           
  1829                           ; BSR set to: 14
  1830                           ;ecan.c: 94: RXM1EIDL = 0xFF;
  1831  0005E6  010E               	movlb	14	; () banked
  1832  0005E8  69FF               	setf	255,b	;volatile
  1833                           
  1834                           ; BSR set to: 14
  1835                           ;ecan.c: 95: RXM1SIDH = 0xFF;
  1836  0005EA  010E               	movlb	14	; () banked
  1837  0005EC  69FC               	setf	252,b	;volatile
  1838                           
  1839                           ; BSR set to: 14
  1840                           ;ecan.c: 96: RXM1SIDL = 0xFF;
  1841  0005EE  010E               	movlb	14	; () banked
  1842  0005F0  69FD               	setf	253,b	;volatile
  1843                           
  1844                           ;ecan.c: 102: RXF0EIDH = 0x00;
  1845  0005F2  0E00               	movlw	0
  1846  0005F4  010E               	movlb	14	; () banked
  1847  0005F6  6FE2               	movwf	226,b	;volatile
  1848                           
  1849                           ;ecan.c: 103: RXF0EIDL = 0x00;
  1850  0005F8  0E00               	movlw	0
  1851  0005FA  010E               	movlb	14	; () banked
  1852  0005FC  6FE3               	movwf	227,b	;volatile
  1853                           
  1854                           ;ecan.c: 104: RXF0SIDH = 0x88;
  1855  0005FE  0E88               	movlw	136
  1856  000600  010E               	movlb	14	; () banked
  1857  000602  6FE0               	movwf	224,b	;volatile
  1858                           
  1859                           ;ecan.c: 105: RXF0SIDL = 0x80;
  1860  000604  0E80               	movlw	128
  1861  000606  010E               	movlb	14	; () banked
  1862  000608  6FE1               	movwf	225,b	;volatile
  1863                           
  1864                           ;ecan.c: 107: RXF1EIDH = 0x00;
  1865  00060A  0E00               	movlw	0
  1866  00060C  010E               	movlb	14	; () banked
  1867  00060E  6FE6               	movwf	230,b	;volatile
  1868                           
  1869                           ;ecan.c: 108: RXF1EIDL = 0x00;
  1870  000610  0E00               	movlw	0
  1871  000612  010E               	movlb	14	; () banked
  1872  000614  6FE7               	movwf	231,b	;volatile
  1873                           
  1874                           ;ecan.c: 109: RXF1SIDH = 0xCC;
  1875  000616  0ECC               	movlw	204
  1876  000618  010E               	movlb	14	; () banked
  1877  00061A  6FE4               	movwf	228,b	;volatile
  1878                           
  1879                           ;ecan.c: 110: RXF1SIDL = 0xC0;
  1880  00061C  0EC0               	movlw	192
  1881  00061E  010E               	movlb	14	; () banked
  1882  000620  6FE5               	movwf	229,b	;volatile
  1883                           
  1884                           ;ecan.c: 112: RXF2EIDH = 0x00;
  1885  000622  0E00               	movlw	0
  1886  000624  010E               	movlb	14	; () banked
  1887  000626  6FEA               	movwf	234,b	;volatile
  1888                           
  1889                           ;ecan.c: 113: RXF2EIDL = 0x00;
  1890  000628  0E00               	movlw	0
  1891  00062A  010E               	movlb	14	; () banked
  1892  00062C  6FEB               	movwf	235,b	;volatile
  1893                           
  1894                           ;ecan.c: 114: RXF2SIDH = 0x00;
  1895  00062E  0E00               	movlw	0
  1896  000630  010E               	movlb	14	; () banked
  1897  000632  6FE8               	movwf	232,b	;volatile
  1898                           
  1899                           ;ecan.c: 115: RXF2SIDL = 0x00;
  1900  000634  0E00               	movlw	0
  1901  000636  010E               	movlb	14	; () banked
  1902  000638  6FE9               	movwf	233,b	;volatile
  1903                           
  1904                           ;ecan.c: 117: RXF3EIDH = 0x00;
  1905  00063A  0E00               	movlw	0
  1906  00063C  010E               	movlb	14	; () banked
  1907  00063E  6FEE               	movwf	238,b	;volatile
  1908                           
  1909                           ;ecan.c: 118: RXF3EIDL = 0x00;
  1910  000640  0E00               	movlw	0
  1911  000642  010E               	movlb	14	; () banked
  1912  000644  6FEF               	movwf	239,b	;volatile
  1913                           
  1914                           ;ecan.c: 119: RXF3SIDH = 0x00;
  1915  000646  0E00               	movlw	0
  1916  000648  010E               	movlb	14	; () banked
  1917  00064A  6FEC               	movwf	236,b	;volatile
  1918                           
  1919                           ;ecan.c: 120: RXF3SIDL = 0x00;
  1920  00064C  0E00               	movlw	0
  1921  00064E  010E               	movlb	14	; () banked
  1922  000650  6FED               	movwf	237,b	;volatile
  1923                           
  1924                           ;ecan.c: 122: RXF4EIDH = 0x00;
  1925  000652  0E00               	movlw	0
  1926  000654  010E               	movlb	14	; () banked
  1927  000656  6FF2               	movwf	242,b	;volatile
  1928                           
  1929                           ;ecan.c: 123: RXF4EIDL = 0x00;
  1930  000658  0E00               	movlw	0
  1931  00065A  010E               	movlb	14	; () banked
  1932  00065C  6FF3               	movwf	243,b	;volatile
  1933                           
  1934                           ;ecan.c: 124: RXF4SIDH = 0x00;
  1935  00065E  0E00               	movlw	0
  1936  000660  010E               	movlb	14	; () banked
  1937  000662  6FF0               	movwf	240,b	;volatile
  1938                           
  1939                           ;ecan.c: 125: RXF4SIDL = 0x00;
  1940  000664  0E00               	movlw	0
  1941  000666  010E               	movlb	14	; () banked
  1942  000668  6FF1               	movwf	241,b	;volatile
  1943                           
  1944                           ;ecan.c: 127: RXF5EIDH = 0x00;
  1945  00066A  0E00               	movlw	0
  1946  00066C  010E               	movlb	14	; () banked
  1947  00066E  6FF6               	movwf	246,b	;volatile
  1948                           
  1949                           ;ecan.c: 128: RXF5EIDL = 0x00;
  1950  000670  0E00               	movlw	0
  1951  000672  010E               	movlb	14	; () banked
  1952  000674  6FF7               	movwf	247,b	;volatile
  1953                           
  1954                           ;ecan.c: 129: RXF5SIDH = 0x00;
  1955  000676  0E00               	movlw	0
  1956  000678  010E               	movlb	14	; () banked
  1957  00067A  6FF4               	movwf	244,b	;volatile
  1958                           
  1959                           ;ecan.c: 130: RXF5SIDL = 0x00;
  1960  00067C  0E00               	movlw	0
  1961  00067E  010E               	movlb	14	; () banked
  1962  000680  6FF5               	movwf	245,b	;volatile
  1963                           
  1964                           ;ecan.c: 145: BRGCON1 = 0x03;
  1965  000682  0E03               	movlw	3
  1966  000684  010E               	movlb	14	; () banked
  1967  000686  6F43               	movwf	67,b	;volatile
  1968                           
  1969                           ;ecan.c: 146: BRGCON2 = 0x98;
  1970  000688  0E98               	movlw	152
  1971  00068A  010E               	movlb	14	; () banked
  1972  00068C  6F44               	movwf	68,b	;volatile
  1973                           
  1974                           ;ecan.c: 147: BRGCON3 = 0x01;
  1975  00068E  0E01               	movlw	1
  1976  000690  010E               	movlb	14	; () banked
  1977  000692  6F45               	movwf	69,b	;volatile
  1978                           
  1979                           ;ecan.c: 149: CANCON = 0x00;
  1980  000694  0E00               	movlw	0
  1981  000696  6E6F               	movwf	3951,c	;volatile
  1982  000698                     l1864:
  1983  000698  CF6E F03D          	movff	3950,??_ECAN_Initialize	;volatile
  1984  00069C  0EE0               	movlw	224
  1985  00069E  163D               	andwf	??_ECAN_Initialize,f,c
  1986  0006A0  B4D8               	btfsc	status,2,c
  1987  0006A2  0012               	return	
  1988  0006A4  D7F9               	goto	l1864
  1989  0006A6                     __end_of_ECAN_Initialize:
  1990                           	opt stack 0
  1991                           tblptru	equ	0xFF8
  1992                           intcon	equ	0xFF2
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           indf2	equ	0xFDF
  1996                           fsr2h	equ	0xFDA
  1997                           fsr2l	equ	0xFD9
  1998                           status	equ	0xFD8
  1999                           
  2000 ;; *************** function _CAN_receive *****************
  2001 ;; Defined at:
  2002 ;;		line 242 in file "mcc_generated_files/ecan.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  tempCanMsg      2   22[COMRAM] PTR struct .
  2005 ;;		 -> canMessage(14), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  returnValue     1   24[COMRAM] unsigned char 
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      unsigned char 
  2010 ;; Registers used:
  2011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2020 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2021 ;;Total ram usage:        3 bytes
  2022 ;; Hardware stack levels used:    1
  2023 ;; Hardware stack levels required when called:    6
  2024 ;; This function calls:
  2025 ;;		_convertReg2ExtendedCANid
  2026 ;;		_convertReg2StandardCANid
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           	psect	text16
  2033  00009A                     __ptext16:
  2034                           	opt stack 0
  2035  00009A                     _CAN_receive:
  2036                           	opt stack 24
  2037                           
  2038                           ;ecan.c: 243: unsigned char returnValue = 0;
  2039                           
  2040                           ;incstack = 0
  2041  00009A  0E00               	movlw	0
  2042  00009C  6E47               	movwf	CAN_receive@returnValue,c
  2043                           
  2044                           ;ecan.c: 247: {
  2045                           ;ecan.c: 250: if (RXB0CONbits.RXFUL != 0)
  2046  00009E  AE60               	btfss	3936,7,c	;volatile
  2047  0000A0  D083               	goto	l348
  2048                           
  2049                           ;ecan.c: 251: {
  2050                           ;ecan.c: 252: if ((RXB0SIDL & 0x08) == 0x08)
  2051  0000A2  A662               	btfss	3938,3,c	;volatile
  2052  0000A4  D01E               	goto	l2138
  2053                           
  2054                           ;ecan.c: 253: {
  2055                           ;ecan.c: 255: tempCanMsg->frame.idType = (unsigned char) 2;
  2056  0000A6  C045  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2057  0000AA  C046  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2058  0000AE  0E02               	movlw	2
  2059  0000B0  6EDF               	movwf	indf2,c
  2060                           
  2061                           ;ecan.c: 256: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB0EIDH, RXB0EIDL, RXB0SI
      +                          DH, RXB0SIDL);
  2062  0000B2  CF64 F03D          	movff	3940,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2063  0000B6  CF61 F03E          	movff	3937,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2064  0000BA  CF62 F03F          	movff	3938,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2065  0000BE  5063               	movf	3939,w,c	;volatile
  2066  0000C0  EC62  F001         	call	_convertReg2ExtendedCANid
  2067  0000C4  EE20 F001          	lfsr	2,1
  2068  0000C8  5045               	movf	CAN_receive@tempCanMsg,w,c
  2069  0000CA  26D9               	addwf	fsr2l,f,c
  2070  0000CC  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2071  0000CE  22DA               	addwfc	fsr2h,f,c
  2072  0000D0  C03D  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2073  0000D4  C03E  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2074  0000D8  C03F  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2075  0000DC  C040  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2076                           
  2077                           ;ecan.c: 257: } else {
  2078  0000E0  D019               	goto	l2142
  2079  0000E2                     l2138:
  2080                           
  2081                           ;ecan.c: 259: tempCanMsg->frame.idType = (unsigned char) 1;
  2082  0000E2  C045  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2083  0000E6  C046  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2084  0000EA  0E01               	movlw	1
  2085  0000EC  6EDF               	movwf	indf2,c
  2086                           
  2087                           ;ecan.c: 260: tempCanMsg->frame.id = convertReg2StandardCANid(RXB0SIDH, RXB0SIDL);
  2088  0000EE  CF62 F03D          	movff	3938,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2089  0000F2  5061               	movf	3937,w,c	;volatile
  2090  0000F4  EC53  F003         	call	_convertReg2StandardCANid
  2091  0000F8  EE20 F001          	lfsr	2,1
  2092  0000FC  5045               	movf	CAN_receive@tempCanMsg,w,c
  2093  0000FE  26D9               	addwf	fsr2l,f,c
  2094  000100  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2095  000102  22DA               	addwfc	fsr2h,f,c
  2096  000104  C03D  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2097  000108  C03E  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2098  00010C  C03F  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2099  000110  C040  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2100  000114                     l2142:
  2101                           
  2102                           ;ecan.c: 261: }
  2103                           ;ecan.c: 263: tempCanMsg->frame.dlc = RXB0DLC;
  2104  000114  EE20 F005          	lfsr	2,5
  2105  000118  5045               	movf	CAN_receive@tempCanMsg,w,c
  2106  00011A  26D9               	addwf	fsr2l,f,c
  2107  00011C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2108  00011E  22DA               	addwfc	fsr2h,f,c
  2109  000120  CF65 FFDF          	movff	3941,indf2	;volatile
  2110                           
  2111                           ;ecan.c: 264: tempCanMsg->frame.data0 = RXB0D0;
  2112  000124  EE20 F006          	lfsr	2,6
  2113  000128  5045               	movf	CAN_receive@tempCanMsg,w,c
  2114  00012A  26D9               	addwf	fsr2l,f,c
  2115  00012C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2116  00012E  22DA               	addwfc	fsr2h,f,c
  2117  000130  CF66 FFDF          	movff	3942,indf2	;volatile
  2118                           
  2119                           ;ecan.c: 265: tempCanMsg->frame.data1 = RXB0D1;
  2120  000134  EE20 F007          	lfsr	2,7
  2121  000138  5045               	movf	CAN_receive@tempCanMsg,w,c
  2122  00013A  26D9               	addwf	fsr2l,f,c
  2123  00013C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2124  00013E  22DA               	addwfc	fsr2h,f,c
  2125  000140  CF67 FFDF          	movff	3943,indf2	;volatile
  2126                           
  2127                           ;ecan.c: 266: tempCanMsg->frame.data2 = RXB0D2;
  2128  000144  EE20 F008          	lfsr	2,8
  2129  000148  5045               	movf	CAN_receive@tempCanMsg,w,c
  2130  00014A  26D9               	addwf	fsr2l,f,c
  2131  00014C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2132  00014E  22DA               	addwfc	fsr2h,f,c
  2133  000150  CF68 FFDF          	movff	3944,indf2	;volatile
  2134                           
  2135                           ;ecan.c: 267: tempCanMsg->frame.data3 = RXB0D3;
  2136  000154  EE20 F009          	lfsr	2,9
  2137  000158  5045               	movf	CAN_receive@tempCanMsg,w,c
  2138  00015A  26D9               	addwf	fsr2l,f,c
  2139  00015C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2140  00015E  22DA               	addwfc	fsr2h,f,c
  2141  000160  CF69 FFDF          	movff	3945,indf2	;volatile
  2142                           
  2143                           ;ecan.c: 268: tempCanMsg->frame.data4 = RXB0D4;
  2144  000164  EE20 F00A          	lfsr	2,10
  2145  000168  5045               	movf	CAN_receive@tempCanMsg,w,c
  2146  00016A  26D9               	addwf	fsr2l,f,c
  2147  00016C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2148  00016E  22DA               	addwfc	fsr2h,f,c
  2149  000170  CF6A FFDF          	movff	3946,indf2	;volatile
  2150                           
  2151                           ;ecan.c: 269: tempCanMsg->frame.data5 = RXB0D5;
  2152  000174  EE20 F00B          	lfsr	2,11
  2153  000178  5045               	movf	CAN_receive@tempCanMsg,w,c
  2154  00017A  26D9               	addwf	fsr2l,f,c
  2155  00017C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2156  00017E  22DA               	addwfc	fsr2h,f,c
  2157  000180  CF6B FFDF          	movff	3947,indf2	;volatile
  2158                           
  2159                           ;ecan.c: 270: tempCanMsg->frame.data6 = RXB0D6;
  2160  000184  EE20 F00C          	lfsr	2,12
  2161  000188  5045               	movf	CAN_receive@tempCanMsg,w,c
  2162  00018A  26D9               	addwf	fsr2l,f,c
  2163  00018C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2164  00018E  22DA               	addwfc	fsr2h,f,c
  2165  000190  CF6C FFDF          	movff	3948,indf2	;volatile
  2166                           
  2167                           ;ecan.c: 271: tempCanMsg->frame.data7 = RXB0D7;
  2168  000194  EE20 F00D          	lfsr	2,13
  2169  000198  5045               	movf	CAN_receive@tempCanMsg,w,c
  2170  00019A  26D9               	addwf	fsr2l,f,c
  2171  00019C  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2172  00019E  22DA               	addwfc	fsr2h,f,c
  2173  0001A0  CF6D FFDF          	movff	3949,indf2	;volatile
  2174                           
  2175                           ;ecan.c: 272: RXB0CONbits.RXFUL = 0;
  2176  0001A4  9E60               	bcf	3936,7,c	;volatile
  2177  0001A6  D089               	goto	l2194
  2178  0001A8                     l348:
  2179  0001A8  010F               	movlb	15	; () banked
  2180  0001AA  AF30               	btfss	48,7,b	;volatile
  2181  0001AC  D088               	goto	l2196
  2182                           
  2183                           ; BSR set to: 15
  2184                           ;ecan.c: 275: {
  2185                           ;ecan.c: 276: if ((RXB1SIDL & 0x08) == 0x08)
  2186  0001AE  010F               	movlb	15	; () banked
  2187  0001B0  A732               	btfss	50,3,b	;volatile
  2188  0001B2  D01F               	goto	l2170
  2189                           
  2190                           ; BSR set to: 15
  2191                           ;ecan.c: 277: {
  2192                           ;ecan.c: 279: tempCanMsg->frame.idType = (unsigned char) 2;
  2193  0001B4  C045  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2194  0001B8  C046  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2195  0001BC  0E02               	movlw	2
  2196  0001BE  6EDF               	movwf	indf2,c
  2197                           
  2198                           ; BSR set to: 15
  2199                           ;ecan.c: 280: tempCanMsg->frame.id = convertReg2ExtendedCANid(RXB1EIDH, RXB1EIDL, RXB1SI
      +                          DH, RXB1SIDL);
  2200  0001C0  CF34 F03D          	movff	3892,convertReg2ExtendedCANid@tempRXBn_EIDL	;volatile
  2201  0001C4  CF31 F03E          	movff	3889,convertReg2ExtendedCANid@tempRXBn_SIDH	;volatile
  2202  0001C8  CF32 F03F          	movff	3890,convertReg2ExtendedCANid@tempRXBn_SIDL	;volatile
  2203  0001CC  010F               	movlb	15	; () banked
  2204  0001CE  5133               	movf	51,w,b	;volatile
  2205  0001D0  EC62  F001         	call	_convertReg2ExtendedCANid
  2206  0001D4  EE20 F001          	lfsr	2,1
  2207  0001D8  5045               	movf	CAN_receive@tempCanMsg,w,c
  2208  0001DA  26D9               	addwf	fsr2l,f,c
  2209  0001DC  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2210  0001DE  22DA               	addwfc	fsr2h,f,c
  2211  0001E0  C03D  FFDE         	movff	?_convertReg2ExtendedCANid,postinc2
  2212  0001E4  C03E  FFDE         	movff	?_convertReg2ExtendedCANid+1,postinc2
  2213  0001E8  C03F  FFDE         	movff	?_convertReg2ExtendedCANid+2,postinc2
  2214  0001EC  C040  FFDE         	movff	?_convertReg2ExtendedCANid+3,postinc2
  2215                           
  2216                           ;ecan.c: 281: }
  2217  0001F0  D01A               	goto	l2174
  2218  0001F2                     l2170:
  2219                           
  2220                           ;ecan.c: 282: else
  2221                           ;ecan.c: 283: {
  2222                           ;ecan.c: 285: tempCanMsg->frame.idType = (unsigned char) 1;
  2223  0001F2  C045  FFD9         	movff	CAN_receive@tempCanMsg,fsr2l
  2224  0001F6  C046  FFDA         	movff	CAN_receive@tempCanMsg+1,fsr2h
  2225  0001FA  0E01               	movlw	1
  2226  0001FC  6EDF               	movwf	indf2,c
  2227                           
  2228                           ;ecan.c: 286: tempCanMsg->frame.id = convertReg2StandardCANid(RXB1SIDH, RXB1SIDL);
  2229  0001FE  CF32 F03D          	movff	3890,convertReg2StandardCANid@tempRXBn_SIDL	;volatile
  2230  000202  010F               	movlb	15	; () banked
  2231  000204  5131               	movf	49,w,b	;volatile
  2232  000206  EC53  F003         	call	_convertReg2StandardCANid
  2233  00020A  EE20 F001          	lfsr	2,1
  2234  00020E  5045               	movf	CAN_receive@tempCanMsg,w,c
  2235  000210  26D9               	addwf	fsr2l,f,c
  2236  000212  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2237  000214  22DA               	addwfc	fsr2h,f,c
  2238  000216  C03D  FFDE         	movff	?_convertReg2StandardCANid,postinc2
  2239  00021A  C03E  FFDE         	movff	?_convertReg2StandardCANid+1,postinc2
  2240  00021E  C03F  FFDE         	movff	?_convertReg2StandardCANid+2,postinc2
  2241  000222  C040  FFDE         	movff	?_convertReg2StandardCANid+3,postinc2
  2242  000226                     l2174:
  2243                           
  2244                           ;ecan.c: 287: }
  2245                           ;ecan.c: 289: tempCanMsg->frame.dlc = RXB1DLC;
  2246  000226  EE20 F005          	lfsr	2,5
  2247  00022A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2248  00022C  26D9               	addwf	fsr2l,f,c
  2249  00022E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2250  000230  22DA               	addwfc	fsr2h,f,c
  2251  000232  CF35 FFDF          	movff	3893,indf2	;volatile
  2252                           
  2253                           ;ecan.c: 290: tempCanMsg->frame.data0 = RXB1D0;
  2254  000236  EE20 F006          	lfsr	2,6
  2255  00023A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2256  00023C  26D9               	addwf	fsr2l,f,c
  2257  00023E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2258  000240  22DA               	addwfc	fsr2h,f,c
  2259  000242  CF36 FFDF          	movff	3894,indf2	;volatile
  2260                           
  2261                           ;ecan.c: 291: tempCanMsg->frame.data1 = RXB1D1;
  2262  000246  EE20 F007          	lfsr	2,7
  2263  00024A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2264  00024C  26D9               	addwf	fsr2l,f,c
  2265  00024E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2266  000250  22DA               	addwfc	fsr2h,f,c
  2267  000252  CF37 FFDF          	movff	3895,indf2	;volatile
  2268                           
  2269                           ;ecan.c: 292: tempCanMsg->frame.data2 = RXB1D2;
  2270  000256  EE20 F008          	lfsr	2,8
  2271  00025A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2272  00025C  26D9               	addwf	fsr2l,f,c
  2273  00025E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2274  000260  22DA               	addwfc	fsr2h,f,c
  2275  000262  CF38 FFDF          	movff	3896,indf2	;volatile
  2276                           
  2277                           ;ecan.c: 293: tempCanMsg->frame.data3 = RXB1D3;
  2278  000266  EE20 F009          	lfsr	2,9
  2279  00026A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2280  00026C  26D9               	addwf	fsr2l,f,c
  2281  00026E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2282  000270  22DA               	addwfc	fsr2h,f,c
  2283  000272  CF39 FFDF          	movff	3897,indf2	;volatile
  2284                           
  2285                           ;ecan.c: 294: tempCanMsg->frame.data4 = RXB1D4;
  2286  000276  EE20 F00A          	lfsr	2,10
  2287  00027A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2288  00027C  26D9               	addwf	fsr2l,f,c
  2289  00027E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2290  000280  22DA               	addwfc	fsr2h,f,c
  2291  000282  CF3A FFDF          	movff	3898,indf2	;volatile
  2292                           
  2293                           ;ecan.c: 295: tempCanMsg->frame.data5 = RXB1D5;
  2294  000286  EE20 F00B          	lfsr	2,11
  2295  00028A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2296  00028C  26D9               	addwf	fsr2l,f,c
  2297  00028E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2298  000290  22DA               	addwfc	fsr2h,f,c
  2299  000292  CF3B FFDF          	movff	3899,indf2	;volatile
  2300                           
  2301                           ;ecan.c: 296: tempCanMsg->frame.data6 = RXB1D6;
  2302  000296  EE20 F00C          	lfsr	2,12
  2303  00029A  5045               	movf	CAN_receive@tempCanMsg,w,c
  2304  00029C  26D9               	addwf	fsr2l,f,c
  2305  00029E  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2306  0002A0  22DA               	addwfc	fsr2h,f,c
  2307  0002A2  CF3C FFDF          	movff	3900,indf2	;volatile
  2308                           
  2309                           ;ecan.c: 297: tempCanMsg->frame.data7 = RXB1D7;
  2310  0002A6  EE20 F00D          	lfsr	2,13
  2311  0002AA  5045               	movf	CAN_receive@tempCanMsg,w,c
  2312  0002AC  26D9               	addwf	fsr2l,f,c
  2313  0002AE  5046               	movf	CAN_receive@tempCanMsg+1,w,c
  2314  0002B0  22DA               	addwfc	fsr2h,f,c
  2315  0002B2  CF3D FFDF          	movff	3901,indf2	;volatile
  2316                           
  2317                           ;ecan.c: 298: RXB1CONbits.RXFUL = 0;
  2318  0002B6  010F               	movlb	15	; () banked
  2319  0002B8  9F30               	bcf	48,7,b	;volatile
  2320  0002BA                     l2194:
  2321                           
  2322                           ; BSR set to: 15
  2323                           ;ecan.c: 299: returnValue = 1;
  2324  0002BA  0E01               	movlw	1
  2325  0002BC  6E47               	movwf	CAN_receive@returnValue,c
  2326  0002BE                     l2196:
  2327                           
  2328                           ;ecan.c: 300: }
  2329                           ;ecan.c: 303: PIR5bits.RXB1IF = 0;
  2330  0002BE  9277               	bcf	3959,1,c	;volatile
  2331                           
  2332                           ;ecan.c: 304: }
  2333                           ;ecan.c: 307: return (returnValue);
  2334  0002C0  5047               	movf	CAN_receive@returnValue,w,c
  2335  0002C2  0012               	return	
  2336  0002C4                     __end_of_CAN_receive:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           intcon	equ	0xFF2
  2340                           postinc0	equ	0xFEE
  2341                           wreg	equ	0xFE8
  2342                           indf2	equ	0xFDF
  2343                           postinc2	equ	0xFDE
  2344                           fsr2h	equ	0xFDA
  2345                           fsr2l	equ	0xFD9
  2346                           status	equ	0xFD8
  2347                           
  2348 ;; *************** function _convertReg2StandardCANid *****************
  2349 ;; Defined at:
  2350 ;;		line 388 in file "mcc_generated_files/ecan.c"
  2351 ;; Parameters:    Size  Location     Type
  2352 ;;  tempRXBn_SID    1    wreg     unsigned char 
  2353 ;;  tempRXBn_SID    1   14[COMRAM] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  tempRXBn_SID    1    0[BANK0 ] unsigned char 
  2356 ;;  ConvertedID     4    5[BANK0 ] unsigned long 
  2357 ;;  returnValue     4    1[BANK0 ] unsigned long 
  2358 ;; Return value:  Size  Location     Type
  2359 ;;                  4   14[COMRAM] unsigned long 
  2360 ;; Registers used:
  2361 ;;		wreg, status,2, status,0
  2362 ;; Tracked objects:
  2363 ;;		On entry : 0/0
  2364 ;;		On exit  : 0/0
  2365 ;;		Unchanged: 0/0
  2366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2370 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2371 ;;Total ram usage:       15 bytes
  2372 ;; Hardware stack levels used:    1
  2373 ;; Hardware stack levels required when called:    5
  2374 ;; This function calls:
  2375 ;;		Nothing
  2376 ;; This function is called by:
  2377 ;;		_CAN_receive
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text17
  2382  0006A6                     __ptext17:
  2383                           	opt stack 0
  2384  0006A6                     _convertReg2StandardCANid:
  2385                           	opt stack 24
  2386                           
  2387                           ;incstack = 0
  2388                           ;convertReg2StandardCANid@tempRXBn_SIDH stored from wreg
  2389  0006A6  0100               	movlb	0	; () banked
  2390  0006A8  6F72               	movwf	convertReg2StandardCANid@tempRXBn_SIDH& (0+255),b
  2391                           
  2392                           ;ecan.c: 389: unsigned long returnValue = 0;
  2393  0006AA  0E00               	movlw	0
  2394  0006AC  0100               	movlb	0	; () banked
  2395  0006AE  6F73               	movwf	convertReg2StandardCANid@returnValue& (0+255),b
  2396  0006B0  0E00               	movlw	0
  2397  0006B2  6F74               	movwf	(convertReg2StandardCANid@returnValue+1)& (0+255),b
  2398  0006B4  0E00               	movlw	0
  2399  0006B6  6F75               	movwf	(convertReg2StandardCANid@returnValue+2)& (0+255),b
  2400  0006B8  0E00               	movlw	0
  2401  0006BA  6F76               	movwf	(convertReg2StandardCANid@returnValue+3)& (0+255),b
  2402                           
  2403                           ; BSR set to: 0
  2404                           ;ecan.c: 390: unsigned long ConvertedID;
  2405                           ;ecan.c: 394: ConvertedID = (tempRXBn_SIDH << 3);
  2406  0006BC  0100               	movlb	0	; () banked
  2407  0006BE  5172               	movf	convertReg2StandardCANid@tempRXBn_SIDH& (0+255),w,b
  2408  0006C0  6E41               	movwf	??_convertReg2StandardCANid& (0+255),c
  2409  0006C2  6A42               	clrf	(??_convertReg2StandardCANid+1)& (0+255),c
  2410  0006C4  90D8               	bcf	status,0,c
  2411  0006C6  3641               	rlcf	??_convertReg2StandardCANid,f,c
  2412  0006C8  3642               	rlcf	??_convertReg2StandardCANid+1,f,c
  2413  0006CA  90D8               	bcf	status,0,c
  2414  0006CC  3641               	rlcf	??_convertReg2StandardCANid,f,c
  2415  0006CE  3642               	rlcf	??_convertReg2StandardCANid+1,f,c
  2416  0006D0  90D8               	bcf	status,0,c
  2417  0006D2  3641               	rlcf	??_convertReg2StandardCANid,f,c
  2418  0006D4  3642               	rlcf	??_convertReg2StandardCANid+1,f,c
  2419  0006D6  C041  F077         	movff	??_convertReg2StandardCANid,convertReg2StandardCANid@ConvertedID
  2420  0006DA  C042  F078         	movff	??_convertReg2StandardCANid+1,convertReg2StandardCANid@ConvertedID+1
  2421  0006DE  0100               	movlb	0	; () banked
  2422  0006E0  0E00               	movlw	0
  2423  0006E2  BF78               	btfsc	(convertReg2StandardCANid@ConvertedID+1)& (0+255),7,b
  2424  0006E4  0EFF               	movlw	-1
  2425  0006E6  6F79               	movwf	(convertReg2StandardCANid@ConvertedID+2)& (0+255),b
  2426  0006E8  6F7A               	movwf	(convertReg2StandardCANid@ConvertedID+3)& (0+255),b
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;ecan.c: 395: ConvertedID = ConvertedID + (tempRXBn_SIDL >> 5);
  2430  0006EA  C03D  F041         	movff	convertReg2StandardCANid@tempRXBn_SIDL,??_convertReg2StandardCANid
  2431  0006EE  0E05               	movlw	5
  2432  0006F0  6E42               	movwf	(??_convertReg2StandardCANid+1)& (0+255),c
  2433  0006F2                     u595:
  2434  0006F2  90D8               	bcf	status,0,c
  2435  0006F4  3241               	rrcf	??_convertReg2StandardCANid,f,c
  2436  0006F6  2E42               	decfsz	(??_convertReg2StandardCANid+1)& (0+255),f,c
  2437  0006F8  D7FC               	goto	u595
  2438  0006FA  5041               	movf	??_convertReg2StandardCANid,w,c
  2439  0006FC  0100               	movlb	0	; () banked
  2440  0006FE  2577               	addwf	convertReg2StandardCANid@ConvertedID& (0+255),w,b
  2441  000700  0100               	movlb	0	; () banked
  2442  000702  6F77               	movwf	convertReg2StandardCANid@ConvertedID& (0+255),b
  2443  000704  0E00               	movlw	0
  2444  000706  0100               	movlb	0	; () banked
  2445  000708  2178               	addwfc	(convertReg2StandardCANid@ConvertedID+1)& (0+255),w,b
  2446  00070A  0100               	movlb	0	; () banked
  2447  00070C  6F78               	movwf	(convertReg2StandardCANid@ConvertedID+1)& (0+255),b
  2448  00070E  0E00               	movlw	0
  2449  000710  0100               	movlb	0	; () banked
  2450  000712  2179               	addwfc	(convertReg2StandardCANid@ConvertedID+2)& (0+255),w,b
  2451  000714  0100               	movlb	0	; () banked
  2452  000716  6F79               	movwf	(convertReg2StandardCANid@ConvertedID+2)& (0+255),b
  2453  000718  0E00               	movlw	0
  2454  00071A  0100               	movlb	0	; () banked
  2455  00071C  217A               	addwfc	(convertReg2StandardCANid@ConvertedID+3)& (0+255),w,b
  2456  00071E  0100               	movlb	0	; () banked
  2457  000720  6F7A               	movwf	(convertReg2StandardCANid@ConvertedID+3)& (0+255),b
  2458                           
  2459                           ; BSR set to: 0
  2460                           ;ecan.c: 396: returnValue = ConvertedID;
  2461  000722  C077  F073         	movff	convertReg2StandardCANid@ConvertedID,convertReg2StandardCANid@returnValue
  2462  000726  C078  F074         	movff	convertReg2StandardCANid@ConvertedID+1,convertReg2StandardCANid@returnValue+1
  2463  00072A  C079  F075         	movff	convertReg2StandardCANid@ConvertedID+2,convertReg2StandardCANid@returnValue+2
  2464  00072E  C07A  F076         	movff	convertReg2StandardCANid@ConvertedID+3,convertReg2StandardCANid@returnValue+3
  2465                           
  2466                           ; BSR set to: 0
  2467                           ;ecan.c: 397: return (returnValue);
  2468  000732  C073  F03D         	movff	convertReg2StandardCANid@returnValue,?_convertReg2StandardCANid
  2469  000736  C074  F03E         	movff	convertReg2StandardCANid@returnValue+1,?_convertReg2StandardCANid+1
  2470  00073A  C075  F03F         	movff	convertReg2StandardCANid@returnValue+2,?_convertReg2StandardCANid+2
  2471  00073E  C076  F040         	movff	convertReg2StandardCANid@returnValue+3,?_convertReg2StandardCANid+3
  2472  000742  0012               	return	
  2473  000744                     __end_of_convertReg2StandardCANid:
  2474                           	opt stack 0
  2475                           tblptru	equ	0xFF8
  2476                           intcon	equ	0xFF2
  2477                           postinc0	equ	0xFEE
  2478                           wreg	equ	0xFE8
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           
  2485 ;; *************** function _convertReg2ExtendedCANid *****************
  2486 ;; Defined at:
  2487 ;;		line 368 in file "mcc_generated_files/ecan.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  tempRXBn_EID    1    wreg     unsigned char 
  2490 ;;  tempRXBn_EID    1   14[COMRAM] unsigned char 
  2491 ;;  tempRXBn_SID    1   15[COMRAM] unsigned char 
  2492 ;;  tempRXBn_SID    1   16[COMRAM] unsigned char 
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;  tempRXBn_EID    1    0[BANK0 ] unsigned char 
  2495 ;;  ConvertedID     4    7[BANK0 ] unsigned long 
  2496 ;;  returnValue     4    1[BANK0 ] unsigned long 
  2497 ;;  CAN_standard    1    6[BANK0 ] unsigned char 
  2498 ;;  CAN_standard    1    5[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  4   14[COMRAM] unsigned long 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2508 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2509 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2510 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2511 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2512 ;;Total ram usage:       19 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    5
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_CAN_receive
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text18
  2523  0002C4                     __ptext18:
  2524                           	opt stack 0
  2525  0002C4                     _convertReg2ExtendedCANid:
  2526                           	opt stack 24
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;incstack = 0
  2530                           ;convertReg2ExtendedCANid@tempRXBn_EIDH stored from wreg
  2531  0002C4  0100               	movlb	0	; () banked
  2532  0002C6  6F72               	movwf	convertReg2ExtendedCANid@tempRXBn_EIDH& (0+255),b
  2533                           
  2534                           ;ecan.c: 369: unsigned long returnValue = 0;
  2535  0002C8  0E00               	movlw	0
  2536  0002CA  0100               	movlb	0	; () banked
  2537  0002CC  6F73               	movwf	convertReg2ExtendedCANid@returnValue& (0+255),b
  2538  0002CE  0E00               	movlw	0
  2539  0002D0  6F74               	movwf	(convertReg2ExtendedCANid@returnValue+1)& (0+255),b
  2540  0002D2  0E00               	movlw	0
  2541  0002D4  6F75               	movwf	(convertReg2ExtendedCANid@returnValue+2)& (0+255),b
  2542  0002D6  0E00               	movlw	0
  2543  0002D8  6F76               	movwf	(convertReg2ExtendedCANid@returnValue+3)& (0+255),b
  2544                           
  2545                           ;ecan.c: 370: unsigned long ConvertedID = 0;
  2546  0002DA  0E00               	movlw	0
  2547  0002DC  0100               	movlb	0	; () banked
  2548  0002DE  6F79               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  2549  0002E0  0E00               	movlw	0
  2550  0002E2  6F7A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  2551  0002E4  0E00               	movlw	0
  2552  0002E6  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2553  0002E8  0E00               	movlw	0
  2554  0002EA  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;ecan.c: 371: unsigned char CAN_standardLo_ID_lo2bits;
  2558                           ;ecan.c: 372: unsigned char CAN_standardLo_ID_hi3bits;
  2559                           ;ecan.c: 374: CAN_standardLo_ID_lo2bits = (tempRXBn_SIDL & 0x03);
  2560  0002EC  503F               	movf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2561  0002EE  0B03               	andlw	3
  2562  0002F0  0100               	movlb	0	; () banked
  2563  0002F2  6F77               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits& (0+255),b
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;ecan.c: 375: CAN_standardLo_ID_hi3bits = (tempRXBn_SIDL >> 5);
  2567  0002F4  383F               	swapf	convertReg2ExtendedCANid@tempRXBn_SIDL,w,c
  2568  0002F6  42E8               	rrncf	wreg,f,c
  2569  0002F8  0B07               	andlw	7
  2570  0002FA  0100               	movlb	0	; () banked
  2571  0002FC  6F78               	movwf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits& (0+255),b
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;ecan.c: 376: ConvertedID = (tempRXBn_SIDH << 3);
  2575  0002FE  503E               	movf	convertReg2ExtendedCANid@tempRXBn_SIDH,w,c
  2576  000300  6E41               	movwf	??_convertReg2ExtendedCANid& (0+255),c
  2577  000302  6A42               	clrf	(??_convertReg2ExtendedCANid+1)& (0+255),c
  2578  000304  90D8               	bcf	status,0,c
  2579  000306  3641               	rlcf	??_convertReg2ExtendedCANid,f,c
  2580  000308  3642               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2581  00030A  90D8               	bcf	status,0,c
  2582  00030C  3641               	rlcf	??_convertReg2ExtendedCANid,f,c
  2583  00030E  3642               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2584  000310  90D8               	bcf	status,0,c
  2585  000312  3641               	rlcf	??_convertReg2ExtendedCANid,f,c
  2586  000314  3642               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2587  000316  C041  F079         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2588  00031A  C042  F07A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2589  00031E  0100               	movlb	0	; () banked
  2590  000320  0E00               	movlw	0
  2591  000322  BF7A               	btfsc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),7,b
  2592  000324  0EFF               	movlw	-1
  2593  000326  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2594  000328  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;ecan.c: 377: ConvertedID = ConvertedID + CAN_standardLo_ID_hi3bits;
  2598  00032A  0100               	movlb	0	; () banked
  2599  00032C  5178               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits& (0+255),w,b
  2600  00032E  0100               	movlb	0	; () banked
  2601  000330  2579               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  2602  000332  0100               	movlb	0	; () banked
  2603  000334  6F79               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  2604  000336  0E00               	movlw	0
  2605  000338  0100               	movlb	0	; () banked
  2606  00033A  217A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  2607  00033C  0100               	movlb	0	; () banked
  2608  00033E  6F7A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  2609  000340  0E00               	movlw	0
  2610  000342  0100               	movlb	0	; () banked
  2611  000344  217B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  2612  000346  0100               	movlb	0	; () banked
  2613  000348  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2614  00034A  0E00               	movlw	0
  2615  00034C  0100               	movlb	0	; () banked
  2616  00034E  217C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  2617  000350  0100               	movlb	0	; () banked
  2618  000352  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;ecan.c: 378: ConvertedID = (ConvertedID << 2);
  2622  000354  C079  F041         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid
  2623  000358  C07A  F042         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+1
  2624  00035C  C07B  F043         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+2
  2625  000360  C07C  F044         	movff	convertReg2ExtendedCANid@ConvertedID+3,??_convertReg2ExtendedCANid+3
  2626  000364  0E02               	movlw	2
  2627  000366                     u585:
  2628  000366  90D8               	bcf	status,0,c
  2629  000368  3641               	rlcf	??_convertReg2ExtendedCANid,f,c
  2630  00036A  3642               	rlcf	??_convertReg2ExtendedCANid+1,f,c
  2631  00036C  3643               	rlcf	??_convertReg2ExtendedCANid+2,f,c
  2632  00036E  3644               	rlcf	??_convertReg2ExtendedCANid+3,f,c
  2633  000370  2EE8               	decfsz	wreg,f,c
  2634  000372  D7F9               	goto	u585
  2635  000374  C041  F079         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2636  000378  C042  F07A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2637  00037C  C043  F07B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2638  000380  C044  F07C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;ecan.c: 379: ConvertedID = ConvertedID + CAN_standardLo_ID_lo2bits;
  2642  000384  0100               	movlb	0	; () banked
  2643  000386  5177               	movf	convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits& (0+255),w,b
  2644  000388  0100               	movlb	0	; () banked
  2645  00038A  2579               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  2646  00038C  0100               	movlb	0	; () banked
  2647  00038E  6F79               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  2648  000390  0E00               	movlw	0
  2649  000392  0100               	movlb	0	; () banked
  2650  000394  217A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  2651  000396  0100               	movlb	0	; () banked
  2652  000398  6F7A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  2653  00039A  0E00               	movlw	0
  2654  00039C  0100               	movlb	0	; () banked
  2655  00039E  217B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  2656  0003A0  0100               	movlb	0	; () banked
  2657  0003A2  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2658  0003A4  0E00               	movlw	0
  2659  0003A6  0100               	movlb	0	; () banked
  2660  0003A8  217C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  2661  0003AA  0100               	movlb	0	; () banked
  2662  0003AC  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2663                           
  2664                           ;ecan.c: 380: ConvertedID = (ConvertedID << 8);
  2665  0003AE  C079  F042         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2666  0003B2  C07A  F043         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2667  0003B6  C07B  F044         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2668  0003BA  6A41               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2669  0003BC  C041  F079         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2670  0003C0  C042  F07A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2671  0003C4  C043  F07B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2672  0003C8  C044  F07C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;ecan.c: 381: ConvertedID = ConvertedID + tempRXBn_EIDH;
  2676  0003CC  0100               	movlb	0	; () banked
  2677  0003CE  5172               	movf	convertReg2ExtendedCANid@tempRXBn_EIDH& (0+255),w,b
  2678  0003D0  0100               	movlb	0	; () banked
  2679  0003D2  2579               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  2680  0003D4  0100               	movlb	0	; () banked
  2681  0003D6  6F79               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  2682  0003D8  0E00               	movlw	0
  2683  0003DA  0100               	movlb	0	; () banked
  2684  0003DC  217A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  2685  0003DE  0100               	movlb	0	; () banked
  2686  0003E0  6F7A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  2687  0003E2  0E00               	movlw	0
  2688  0003E4  0100               	movlb	0	; () banked
  2689  0003E6  217B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  2690  0003E8  0100               	movlb	0	; () banked
  2691  0003EA  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2692  0003EC  0E00               	movlw	0
  2693  0003EE  0100               	movlb	0	; () banked
  2694  0003F0  217C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  2695  0003F2  0100               	movlb	0	; () banked
  2696  0003F4  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;ecan.c: 382: ConvertedID = (ConvertedID << 8);
  2700  0003F6  C079  F042         	movff	convertReg2ExtendedCANid@ConvertedID,??_convertReg2ExtendedCANid+1
  2701  0003FA  C07A  F043         	movff	convertReg2ExtendedCANid@ConvertedID+1,??_convertReg2ExtendedCANid+2
  2702  0003FE  C07B  F044         	movff	convertReg2ExtendedCANid@ConvertedID+2,??_convertReg2ExtendedCANid+3
  2703  000402  6A41               	clrf	??_convertReg2ExtendedCANid& (0+255),c
  2704  000404  C041  F079         	movff	??_convertReg2ExtendedCANid,convertReg2ExtendedCANid@ConvertedID
  2705  000408  C042  F07A         	movff	??_convertReg2ExtendedCANid+1,convertReg2ExtendedCANid@ConvertedID+1
  2706  00040C  C043  F07B         	movff	??_convertReg2ExtendedCANid+2,convertReg2ExtendedCANid@ConvertedID+2
  2707  000410  C044  F07C         	movff	??_convertReg2ExtendedCANid+3,convertReg2ExtendedCANid@ConvertedID+3
  2708                           
  2709                           ;ecan.c: 383: ConvertedID = ConvertedID + tempRXBn_EIDL;
  2710  000414  503D               	movf	convertReg2ExtendedCANid@tempRXBn_EIDL,w,c
  2711  000416  0100               	movlb	0	; () banked
  2712  000418  2579               	addwf	convertReg2ExtendedCANid@ConvertedID& (0+255),w,b
  2713  00041A  0100               	movlb	0	; () banked
  2714  00041C  6F79               	movwf	convertReg2ExtendedCANid@ConvertedID& (0+255),b
  2715  00041E  0E00               	movlw	0
  2716  000420  0100               	movlb	0	; () banked
  2717  000422  217A               	addwfc	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),w,b
  2718  000424  0100               	movlb	0	; () banked
  2719  000426  6F7A               	movwf	(convertReg2ExtendedCANid@ConvertedID+1)& (0+255),b
  2720  000428  0E00               	movlw	0
  2721  00042A  0100               	movlb	0	; () banked
  2722  00042C  217B               	addwfc	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),w,b
  2723  00042E  0100               	movlb	0	; () banked
  2724  000430  6F7B               	movwf	(convertReg2ExtendedCANid@ConvertedID+2)& (0+255),b
  2725  000432  0E00               	movlw	0
  2726  000434  0100               	movlb	0	; () banked
  2727  000436  217C               	addwfc	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),w,b
  2728  000438  0100               	movlb	0	; () banked
  2729  00043A  6F7C               	movwf	(convertReg2ExtendedCANid@ConvertedID+3)& (0+255),b
  2730                           
  2731                           ; BSR set to: 0
  2732                           ;ecan.c: 384: returnValue = ConvertedID;
  2733  00043C  C079  F073         	movff	convertReg2ExtendedCANid@ConvertedID,convertReg2ExtendedCANid@returnValue
  2734  000440  C07A  F074         	movff	convertReg2ExtendedCANid@ConvertedID+1,convertReg2ExtendedCANid@returnValue+1
  2735  000444  C07B  F075         	movff	convertReg2ExtendedCANid@ConvertedID+2,convertReg2ExtendedCANid@returnValue+2
  2736  000448  C07C  F076         	movff	convertReg2ExtendedCANid@ConvertedID+3,convertReg2ExtendedCANid@returnValue+3
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;ecan.c: 385: return (returnValue);
  2740  00044C  C073  F03D         	movff	convertReg2ExtendedCANid@returnValue,?_convertReg2ExtendedCANid
  2741  000450  C074  F03E         	movff	convertReg2ExtendedCANid@returnValue+1,?_convertReg2ExtendedCANid+1
  2742  000454  C075  F03F         	movff	convertReg2ExtendedCANid@returnValue+2,?_convertReg2ExtendedCANid+2
  2743  000458  C076  F040         	movff	convertReg2ExtendedCANid@returnValue+3,?_convertReg2ExtendedCANid+3
  2744  00045C  0012               	return	
  2745  00045E                     __end_of_convertReg2ExtendedCANid:
  2746                           	opt stack 0
  2747                           tblptru	equ	0xFF8
  2748                           intcon	equ	0xFF2
  2749                           postinc0	equ	0xFEE
  2750                           wreg	equ	0xFE8
  2751                           indf2	equ	0xFDF
  2752                           postinc2	equ	0xFDE
  2753                           fsr2h	equ	0xFDA
  2754                           fsr2l	equ	0xFD9
  2755                           status	equ	0xFD8
  2756                           
  2757 ;; *************** function _INTERRUPT_InterruptManager *****************
  2758 ;; Defined at:
  2759 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2777 ;;Total ram usage:       14 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    4
  2780 ;; This function calls:
  2781 ;;		_TMR0_ISR
  2782 ;;		_TMR1_ISR
  2783 ;; This function is called by:
  2784 ;;		Interrupt level 2
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	intcode
  2789  000008                     __pintcode:
  2790                           	opt stack 0
  2791  000008                     _INTERRUPT_InterruptManager:
  2792                           	opt stack 23
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;incstack = 0
  2796  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2797  00000A  CFFA F02F          	movff	pclath,??_INTERRUPT_InterruptManager
  2798  00000E  CFFB F030          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  2799  000012  CFE9 F031          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  2800  000016  CFEA F032          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  2801  00001A  CFE1 F033          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  2802  00001E  CFE2 F034          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  2803  000022  CFD9 F035          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  2804  000026  CFDA F036          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  2805  00002A  CFF3 F037          	movff	prodl,??_INTERRUPT_InterruptManager+8
  2806  00002E  CFF4 F038          	movff	prodh,??_INTERRUPT_InterruptManager+9
  2807  000032  CFF6 F039          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  2808  000036  CFF7 F03A          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  2809  00003A  CFF8 F03B          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  2810  00003E  CFF5 F03C          	movff	tablat,??_INTERRUPT_InterruptManager+13
  2811                           
  2812                           ;interrupt_manager.c: 60: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  2813  000042  BAF2               	btfsc	intcon,5,c	;volatile
  2814  000044  A4F2               	btfss	intcon,2,c	;volatile
  2815  000046  D003               	goto	i2l473
  2816                           
  2817                           ;interrupt_manager.c: 61: {
  2818                           ;interrupt_manager.c: 62: TMR0_ISR();
  2819  000048  EC39  F004         	call	_TMR0_ISR	;wreg free
  2820                           
  2821                           ;interrupt_manager.c: 63: }
  2822  00004C  D006               	goto	i2l477
  2823  00004E                     i2l473:
  2824                           
  2825                           ;interrupt_manager.c: 64: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
  2826  00004E  BCF2               	btfsc	intcon,6,c	;volatile
  2827  000050  A09D               	btfss	3997,0,c	;volatile
  2828  000052  D003               	goto	i2l477
  2829  000054  B09E               	btfsc	3998,0,c	;volatile
  2830                           
  2831                           ;interrupt_manager.c: 65: {
  2832                           ;interrupt_manager.c: 66: TMR1_ISR();
  2833  000056  EC4E  F004         	call	_TMR1_ISR	;wreg free
  2834  00005A                     i2l477:
  2835  00005A  C03C  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  2836  00005E  C03B  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  2837  000062  C03A  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  2838  000066  C039  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  2839  00006A  C038  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  2840  00006E  C037  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  2841  000072  C036  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  2842  000076  C035  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  2843  00007A  C034  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  2844  00007E  C033  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  2845  000082  C032  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  2846  000086  C031  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  2847  00008A  C030  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  2848  00008E  C02F  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  2849  000092  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2850  000094  0011               	retfie		f
  2851  000096                     __end_of_INTERRUPT_InterruptManager:
  2852                           	opt stack 0
  2853                           pclatu	equ	0xFFB
  2854                           pclath	equ	0xFFA
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           intcon	equ	0xFF2
  2862                           postinc0	equ	0xFEE
  2863                           fsr0h	equ	0xFEA
  2864                           fsr0l	equ	0xFE9
  2865                           wreg	equ	0xFE8
  2866                           fsr1h	equ	0xFE2
  2867                           fsr1l	equ	0xFE1
  2868                           indf2	equ	0xFDF
  2869                           postinc2	equ	0xFDE
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _TMR1_ISR *****************
  2875 ;; Defined at:
  2876 ;;		line 160 in file "mcc_generated_files/tmr1.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      void 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;Total ram usage:        0 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    3
  2897 ;; This function calls:
  2898 ;;		_TMR1_CallBack
  2899 ;; This function is called by:
  2900 ;;		_INTERRUPT_InterruptManager
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text20
  2905  00089C                     __ptext20:
  2906                           	opt stack 0
  2907  00089C                     _TMR1_ISR:
  2908                           	opt stack 23
  2909                           
  2910                           ;tmr1.c: 162: static volatile unsigned int CountCallBack = 0;
  2911                           ;tmr1.c: 165: PIR1bits.TMR1IF = 0;
  2912                           
  2913                           ;incstack = 0
  2914  00089C  909E               	bcf	3998,0,c	;volatile
  2915                           
  2916                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
  2917  00089E  5050               	movf	_timer1ReloadVal+1,w,c	;volatile
  2918  0008A0  6ECF               	movwf	4047,c	;volatile
  2919                           
  2920                           ;tmr1.c: 168: TMR1L = timer1ReloadVal;
  2921  0008A2  C04F  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  2922                           
  2923                           ;tmr1.c: 171: if (++CountCallBack >= 4)
  2924  0008A6  4A03               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
  2925  0008A8  2A04               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
  2926  0008AA  5004               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
  2927  0008AC  E104               	bnz	i2u12_40
  2928  0008AE  0E04               	movlw	4
  2929  0008B0  5C03               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
  2930  0008B2  A0D8               	btfss	status,0,c
  2931  0008B4  0012               	return	
  2932  0008B6                     i2u12_40:
  2933                           
  2934                           ;tmr1.c: 172: {
  2935                           ;tmr1.c: 174: TMR1_CallBack();
  2936  0008B6  EC75  F004         	call	_TMR1_CallBack	;wreg free
  2937                           
  2938                           ;tmr1.c: 177: CountCallBack = 0;
  2939  0008BA  0E00               	movlw	0
  2940  0008BC  6E04               	movwf	TMR1_ISR@CountCallBack+1,c	;volatile
  2941  0008BE  0E00               	movlw	0
  2942  0008C0  6E03               	movwf	TMR1_ISR@CountCallBack,c	;volatile
  2943  0008C2  0012               	return	
  2944  0008C4                     __end_of_TMR1_ISR:
  2945                           	opt stack 0
  2946                           pclatu	equ	0xFFB
  2947                           pclath	equ	0xFFA
  2948                           tblptru	equ	0xFF8
  2949                           tblptrh	equ	0xFF7
  2950                           tblptrl	equ	0xFF6
  2951                           tablat	equ	0xFF5
  2952                           prodh	equ	0xFF4
  2953                           prodl	equ	0xFF3
  2954                           intcon	equ	0xFF2
  2955                           postinc0	equ	0xFEE
  2956                           fsr0h	equ	0xFEA
  2957                           fsr0l	equ	0xFE9
  2958                           wreg	equ	0xFE8
  2959                           fsr1h	equ	0xFE2
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           postinc2	equ	0xFDE
  2963                           fsr2h	equ	0xFDA
  2964                           fsr2l	equ	0xFD9
  2965                           status	equ	0xFD8
  2966                           
  2967 ;; *************** function _TMR1_CallBack *****************
  2968 ;; Defined at:
  2969 ;;		line 181 in file "mcc_generated_files/tmr1.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used:    1
  2989 ;; Hardware stack levels required when called:    2
  2990 ;; This function calls:
  2991 ;;		Absolute function
  2992 ;;		_TMR1_DefaultInterruptHandler
  2993 ;;		_time_to_send
  2994 ;; This function is called by:
  2995 ;;		_TMR1_ISR
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text21
  3000  0008EA                     __ptext21:
  3001                           	opt stack 0
  3002  0008EA                     _TMR1_CallBack:
  3003                           	opt stack 23
  3004                           
  3005                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
  3006                           
  3007                           ;incstack = 0
  3008  0008EA  504D               	movf	_TMR1_InterruptHandler,w,c
  3009  0008EC  104E               	iorwf	_TMR1_InterruptHandler+1,w,c
  3010  0008EE  B4D8               	btfsc	status,2,c
  3011  0008F0  0012               	return	
  3012                           
  3013                           ;tmr1.c: 185: {
  3014                           ;tmr1.c: 186: TMR1_InterruptHandler();
  3015  0008F2  D801               	call	i2u7_48
  3016  0008F4  0012               	return	
  3017  0008F6                     i2u7_48:
  3018  0008F6  0005               	push	
  3019  0008F8  6EFA               	movwf	pclath,c
  3020  0008FA  504D               	movf	_TMR1_InterruptHandler,w,c
  3021  0008FC  6EFD               	movwf	tosl,c
  3022  0008FE  504E               	movf	_TMR1_InterruptHandler+1,w,c
  3023  000900  6EFE               	movwf	tosh,c
  3024  000902  50F8               	movf	tblptru,w,c
  3025  000904  6EFF               	movwf	tosu,c
  3026  000906  50FA               	movf	pclath,w,c
  3027  000908  0012               	return		;indir
  3028  00090A                     __end_of_TMR1_CallBack:
  3029                           	opt stack 0
  3030                           tosu	equ	0xFFF
  3031                           tosh	equ	0xFFE
  3032                           tosl	equ	0xFFD
  3033                           pclatu	equ	0xFFB
  3034                           pclath	equ	0xFFA
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           prodh	equ	0xFF4
  3040                           prodl	equ	0xFF3
  3041                           intcon	equ	0xFF2
  3042                           postinc0	equ	0xFEE
  3043                           fsr0h	equ	0xFEA
  3044                           fsr0l	equ	0xFE9
  3045                           wreg	equ	0xFE8
  3046                           fsr1h	equ	0xFE2
  3047                           fsr1l	equ	0xFE1
  3048                           indf2	equ	0xFDF
  3049                           postinc2	equ	0xFDE
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           
  3054 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  3055 ;; Defined at:
  3056 ;;		line 194 in file "mcc_generated_files/tmr1.c"
  3057 ;; Parameters:    Size  Location     Type
  3058 ;;		None
  3059 ;; Auto vars:     Size  Location     Type
  3060 ;;		None
  3061 ;; Return value:  Size  Location     Type
  3062 ;;                  1    wreg      void 
  3063 ;; Registers used:
  3064 ;;		None
  3065 ;; Tracked objects:
  3066 ;;		On entry : 0/0
  3067 ;;		On exit  : 0/0
  3068 ;;		Unchanged: 0/0
  3069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3074 ;;Total ram usage:        0 bytes
  3075 ;; Hardware stack levels used:    1
  3076 ;; This function calls:
  3077 ;;		Nothing
  3078 ;; This function is called by:
  3079 ;;		_TMR1_Initialize
  3080 ;;		_TMR1_CallBack
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text22
  3085  00098E                     __ptext22:
  3086                           	opt stack 0
  3087  00098E                     _TMR1_DefaultInterruptHandler:
  3088                           	opt stack 24
  3089                           
  3090                           ;incstack = 0
  3091  00098E  0012               	return		;funcret
  3092  000990                     __end_of_TMR1_DefaultInterruptHandler:
  3093                           	opt stack 0
  3094                           tosu	equ	0xFFF
  3095                           tosh	equ	0xFFE
  3096                           tosl	equ	0xFFD
  3097                           pclatu	equ	0xFFB
  3098                           pclath	equ	0xFFA
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           postinc0	equ	0xFEE
  3107                           fsr0h	equ	0xFEA
  3108                           fsr0l	equ	0xFE9
  3109                           wreg	equ	0xFE8
  3110                           fsr1h	equ	0xFE2
  3111                           fsr1l	equ	0xFE1
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           fsr2h	equ	0xFDA
  3115                           fsr2l	equ	0xFD9
  3116                           status	equ	0xFD8
  3117                           
  3118 ;; *************** function _time_to_send *****************
  3119 ;; Defined at:
  3120 ;;		line 26 in file "main.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used:    1
  3140 ;; Hardware stack levels required when called:    1
  3141 ;; This function calls:
  3142 ;;		_TMR1_StopTimer
  3143 ;; This function is called by:
  3144 ;;		_main
  3145 ;;		_TMR1_CallBack
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text23
  3150  000950                     __ptext23:
  3151                           	opt stack 0
  3152  000950                     _time_to_send:
  3153                           	opt stack 23
  3154                           
  3155                           ;main.c: 27: TMR1_StopTimer();
  3156                           
  3157                           ;incstack = 0
  3158  000950  ECC5  F004         	call	_TMR1_StopTimer	;wreg free
  3159                           
  3160                           ;main.c: 28: (INTCONbits.GIE = 0);
  3161  000954  9EF2               	bcf	intcon,7,c	;volatile
  3162                           
  3163                           ;main.c: 29: (INTCONbits.PEIE = 0);
  3164  000956  9CF2               	bcf	intcon,6,c	;volatile
  3165                           
  3166                           ;main.c: 30: send = 1;
  3167  000958  0E01               	movlw	1
  3168  00095A  6E05               	movwf	_send,c
  3169  00095C  0012               	return		;funcret
  3170  00095E                     __end_of_time_to_send:
  3171                           	opt stack 0
  3172                           tosu	equ	0xFFF
  3173                           tosh	equ	0xFFE
  3174                           tosl	equ	0xFFD
  3175                           pclatu	equ	0xFFB
  3176                           pclath	equ	0xFFA
  3177                           tblptru	equ	0xFF8
  3178                           tblptrh	equ	0xFF7
  3179                           tblptrl	equ	0xFF6
  3180                           tablat	equ	0xFF5
  3181                           prodh	equ	0xFF4
  3182                           prodl	equ	0xFF3
  3183                           intcon	equ	0xFF2
  3184                           postinc0	equ	0xFEE
  3185                           fsr0h	equ	0xFEA
  3186                           fsr0l	equ	0xFE9
  3187                           wreg	equ	0xFE8
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           indf2	equ	0xFDF
  3191                           postinc2	equ	0xFDE
  3192                           fsr2h	equ	0xFDA
  3193                           fsr2l	equ	0xFD9
  3194                           status	equ	0xFD8
  3195                           
  3196 ;; *************** function _TMR1_StopTimer *****************
  3197 ;; Defined at:
  3198 ;;		line 101 in file "mcc_generated_files/tmr1.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		None
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used:    1
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_time_to_send
  3222 ;; This function uses a non-reentrant model
  3223 ;;
  3224                           
  3225                           	psect	text24
  3226  00098A                     __ptext24:
  3227                           	opt stack 0
  3228  00098A                     _TMR1_StopTimer:
  3229                           	opt stack 23
  3230                           
  3231                           ;tmr1.c: 104: T1CONbits.TMR1ON = 0;
  3232                           
  3233                           ;incstack = 0
  3234  00098A  90CD               	bcf	4045,0,c	;volatile
  3235  00098C  0012               	return		;funcret
  3236  00098E                     __end_of_TMR1_StopTimer:
  3237                           	opt stack 0
  3238                           tosu	equ	0xFFF
  3239                           tosh	equ	0xFFE
  3240                           tosl	equ	0xFFD
  3241                           pclatu	equ	0xFFB
  3242                           pclath	equ	0xFFA
  3243                           tblptru	equ	0xFF8
  3244                           tblptrh	equ	0xFF7
  3245                           tblptrl	equ	0xFF6
  3246                           tablat	equ	0xFF5
  3247                           prodh	equ	0xFF4
  3248                           prodl	equ	0xFF3
  3249                           intcon	equ	0xFF2
  3250                           postinc0	equ	0xFEE
  3251                           fsr0h	equ	0xFEA
  3252                           fsr0l	equ	0xFE9
  3253                           wreg	equ	0xFE8
  3254                           fsr1h	equ	0xFE2
  3255                           fsr1l	equ	0xFE1
  3256                           indf2	equ	0xFDF
  3257                           postinc2	equ	0xFDE
  3258                           fsr2h	equ	0xFDA
  3259                           fsr2l	equ	0xFD9
  3260                           status	equ	0xFD8
  3261                           
  3262 ;; *************** function _TMR0_ISR *****************
  3263 ;; Defined at:
  3264 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3282 ;;Total ram usage:        0 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    1
  3285 ;; This function calls:
  3286 ;;		Absolute function
  3287 ;;		_TMR0_DefaultInterruptHandler
  3288 ;; This function is called by:
  3289 ;;		_INTERRUPT_InterruptManager
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           	psect	text25
  3294  000872                     __ptext25:
  3295                           	opt stack 0
  3296  000872                     _TMR0_ISR:
  3297                           	opt stack 25
  3298                           
  3299                           ;tmr0.c: 138: INTCONbits.TMR0IF = 0;
  3300                           
  3301                           ;incstack = 0
  3302  000872  94F2               	bcf	intcon,2,c	;volatile
  3303                           
  3304                           ;tmr0.c: 142: TMR0H = timer0ReloadVal >> 8;
  3305  000874  504A               	movf	_timer0ReloadVal+1,w,c	;volatile
  3306  000876  6ED7               	movwf	4055,c	;volatile
  3307                           
  3308                           ;tmr0.c: 143: TMR0L = (uint8_t) timer0ReloadVal;
  3309  000878  C049  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  3310                           
  3311                           ;tmr0.c: 145: if(TMR0_InterruptHandler)
  3312  00087C  504B               	movf	_TMR0_InterruptHandler,w,c
  3313  00087E  104C               	iorwf	_TMR0_InterruptHandler+1,w,c
  3314  000880  B4D8               	btfsc	status,2,c
  3315  000882  0012               	return	
  3316                           
  3317                           ;tmr0.c: 146: {
  3318                           ;tmr0.c: 147: TMR0_InterruptHandler();
  3319  000884  D801               	call	i2u14_48
  3320  000886  0012               	return	
  3321  000888                     i2u14_48:
  3322  000888  0005               	push	
  3323  00088A  6EFA               	movwf	pclath,c
  3324  00088C  504B               	movf	_TMR0_InterruptHandler,w,c
  3325  00088E  6EFD               	movwf	tosl,c
  3326  000890  504C               	movf	_TMR0_InterruptHandler+1,w,c
  3327  000892  6EFE               	movwf	tosh,c
  3328  000894  50F8               	movf	tblptru,w,c
  3329  000896  6EFF               	movwf	tosu,c
  3330  000898  50FA               	movf	pclath,w,c
  3331  00089A  0012               	return		;indir
  3332  00089C                     __end_of_TMR0_ISR:
  3333                           	opt stack 0
  3334                           tosu	equ	0xFFF
  3335                           tosh	equ	0xFFE
  3336                           tosl	equ	0xFFD
  3337                           pclatu	equ	0xFFB
  3338                           pclath	equ	0xFFA
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           prodh	equ	0xFF4
  3344                           prodl	equ	0xFF3
  3345                           intcon	equ	0xFF2
  3346                           postinc0	equ	0xFEE
  3347                           fsr0h	equ	0xFEA
  3348                           fsr0l	equ	0xFE9
  3349                           wreg	equ	0xFE8
  3350                           fsr1h	equ	0xFE2
  3351                           fsr1l	equ	0xFE1
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           fsr2h	equ	0xFDA
  3355                           fsr2l	equ	0xFD9
  3356                           status	equ	0xFD8
  3357                           
  3358 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  3359 ;; Defined at:
  3360 ;;		line 158 in file "mcc_generated_files/tmr0.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;		None
  3363 ;; Auto vars:     Size  Location     Type
  3364 ;;		None
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		None
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;Total ram usage:        0 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_TMR0_Initialize
  3384 ;;		_TMR0_ISR
  3385 ;; This function uses a non-reentrant model
  3386 ;;
  3387                           
  3388                           	psect	text26
  3389  000990                     __ptext26:
  3390                           	opt stack 0
  3391  000990                     _TMR0_DefaultInterruptHandler:
  3392                           	opt stack 25
  3393                           
  3394                           ;incstack = 0
  3395  000990  0012               	return		;funcret
  3396  000992                     __end_of_TMR0_DefaultInterruptHandler:
  3397                           	opt stack 0
  3398  0000                     tosu	equ	0xFFF
  3399                           tosh	equ	0xFFE
  3400                           tosl	equ	0xFFD
  3401                           pclatu	equ	0xFFB
  3402                           pclath	equ	0xFFA
  3403                           tblptru	equ	0xFF8
  3404                           tblptrh	equ	0xFF7
  3405                           tblptrl	equ	0xFF6
  3406                           tablat	equ	0xFF5
  3407                           prodh	equ	0xFF4
  3408                           prodl	equ	0xFF3
  3409                           intcon	equ	0xFF2
  3410                           postinc0	equ	0xFEE
  3411                           fsr0h	equ	0xFEA
  3412                           fsr0l	equ	0xFE9
  3413                           wreg	equ	0xFE8
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           fsr2h	equ	0xFDA
  3419                           fsr2l	equ	0xFD9
  3420                           status	equ	0xFD8
  3421                           tosu	equ	0xFFF
  3422                           tosh	equ	0xFFE
  3423                           tosl	equ	0xFFD
  3424                           pclatu	equ	0xFFB
  3425                           pclath	equ	0xFFA
  3426                           tblptru	equ	0xFF8
  3427                           tblptrh	equ	0xFF7
  3428                           tblptrl	equ	0xFF6
  3429                           tablat	equ	0xFF5
  3430                           prodh	equ	0xFF4
  3431                           prodl	equ	0xFF3
  3432                           intcon	equ	0xFF2
  3433                           postinc0	equ	0xFEE
  3434                           fsr0h	equ	0xFEA
  3435                           fsr0l	equ	0xFE9
  3436                           wreg	equ	0xFE8
  3437                           fsr1h	equ	0xFE2
  3438                           fsr1l	equ	0xFE1
  3439                           indf2	equ	0xFDF
  3440                           postinc2	equ	0xFDE
  3441                           fsr2h	equ	0xFDA
  3442                           fsr2l	equ	0xFD9
  3443                           status	equ	0xFD8
  3444                           
  3445                           	psect	text27
  3446  000000                     __ptext27:
  3447                           	opt stack 0
  3448                           tosu	equ	0xFFF
  3449                           tosh	equ	0xFFE
  3450                           tosl	equ	0xFFD
  3451                           pclatu	equ	0xFFB
  3452                           pclath	equ	0xFFA
  3453                           tblptru	equ	0xFF8
  3454                           tblptrh	equ	0xFF7
  3455                           tblptrl	equ	0xFF6
  3456                           tablat	equ	0xFF5
  3457                           prodh	equ	0xFF4
  3458                           prodl	equ	0xFF3
  3459                           intcon	equ	0xFF2
  3460                           postinc0	equ	0xFEE
  3461                           fsr0h	equ	0xFEA
  3462                           fsr0l	equ	0xFE9
  3463                           wreg	equ	0xFE8
  3464                           fsr1h	equ	0xFE2
  3465                           fsr1l	equ	0xFE1
  3466                           indf2	equ	0xFDF
  3467                           postinc2	equ	0xFDE
  3468                           fsr2h	equ	0xFDA
  3469                           fsr2l	equ	0xFD9
  3470                           status	equ	0xFD8
  3471                           
  3472                           	psect	rparam
  3473  0000                     tosu	equ	0xFFF
  3474                           tosh	equ	0xFFE
  3475                           tosl	equ	0xFFD
  3476                           pclatu	equ	0xFFB
  3477                           pclath	equ	0xFFA
  3478                           tblptru	equ	0xFF8
  3479                           tblptrh	equ	0xFF7
  3480                           tblptrl	equ	0xFF6
  3481                           tablat	equ	0xFF5
  3482                           prodh	equ	0xFF4
  3483                           prodl	equ	0xFF3
  3484                           intcon	equ	0xFF2
  3485                           postinc0	equ	0xFEE
  3486                           fsr0h	equ	0xFEA
  3487                           fsr0l	equ	0xFE9
  3488                           wreg	equ	0xFE8
  3489                           fsr1h	equ	0xFE2
  3490                           fsr1l	equ	0xFE1
  3491                           indf2	equ	0xFDF
  3492                           postinc2	equ	0xFDE
  3493                           fsr2h	equ	0xFDA
  3494                           fsr2l	equ	0xFD9
  3495                           status	equ	0xFD8
  3496                           
  3497                           	psect	temp
  3498  000051                     btemp:
  3499                           	opt stack 0
  3500  000051                     	ds	1
  3501  0000                     int$flags	set	btemp
  3502                           tosu	equ	0xFFF
  3503                           tosh	equ	0xFFE
  3504                           tosl	equ	0xFFD
  3505                           pclatu	equ	0xFFB
  3506                           pclath	equ	0xFFA
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           fsr0h	equ	0xFEA
  3516                           fsr0l	equ	0xFE9
  3517                           wreg	equ	0xFE8
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           indf2	equ	0xFDF
  3521                           postinc2	equ	0xFDE
  3522                           fsr2h	equ	0xFDA
  3523                           fsr2l	equ	0xFD9
  3524                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         64
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     26      80
    BANK0           160     11      29
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    memcpy@d1	PTR void  size(2) Largest target is 9
		 -> data5(BANK0[9]), data4(BANK0[9]), data3(COMRAM[9]), data2(COMRAM[9]), 
		 -> data1(COMRAM[9]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 9
		 -> data5(BANK0[9]), data4(BANK0[9]), data3(COMRAM[9]), data2(COMRAM[9]), 
		 -> data1(COMRAM[9]), 

    memcpy@s1	PTR const void  size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 

    sendPacket@bytes	PTR unsigned char  size(2) Largest target is 9
		 -> data5(BANK0[9]), data4(BANK0[9]), data3(COMRAM[9]), data2(COMRAM[9]), 
		 -> data1(COMRAM[9]), 

    sp__memcpy	PTR void  size(2) Largest target is 9
		 -> data5(BANK0[9]), data4(BANK0[9]), data3(COMRAM[9]), data2(COMRAM[9]), 
		 -> data1(COMRAM[9]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> time_to_send(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> time_to_send(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    CAN_receive@tempCanMsg	PTR struct . size(2) Largest target is 14
		 -> canMessage(COMRAM[14]), 


Critical Paths under _main in COMRAM

    _main->_CAN_receive
    _main->_memcpy
    _sendPacket->_EUSART2_Write
    _SYSTEM_Initialize->_TMR0_Initialize
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _CAN_receive->_convertReg2ExtendedCANid

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4768
                                             25 COMRAM     1     1      0
                        _CAN_receive
                 _EUSART2_Initialize
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
                             _memcpy
                         _sendPacket
 ---------------------------------------------------------------------------------
 (1) _sendPacket                                           4     2      2     492
                                             15 COMRAM     4     2      2
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Write                                        1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _memcpy                                              11     5      6    1283
                                             14 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                    _ECAN_Initialize
                 _EUSART2_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0     174
                                             16 COMRAM     2     2      0
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             16 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
                    _TMR0_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECAN_Initialize                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN_receive                                          3     1      2    2358
                                             22 COMRAM     3     1      2
           _convertReg2ExtendedCANid
           _convertReg2StandardCANid
 ---------------------------------------------------------------------------------
 (2) _convertReg2StandardCANid                            15    11      4     347
                                             14 COMRAM     6     2      4
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (2) _convertReg2ExtendedCANid                            19    15      4    1075
                                             14 COMRAM     8     4      4
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          14    14      0       0
                                              0 COMRAM    14    14      0
                           _TMR0_ISR
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                             0     0      0       0
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (6) _TMR1_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _time_to_send *
 ---------------------------------------------------------------------------------
 (7) _time_to_send                                         0     0      0       0
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (8) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN_receive
     _convertReg2ExtendedCANid
     _convertReg2StandardCANid
   _EUSART2_Initialize
   _SYSTEM_Initialize
     _ECAN_Initialize
     _EUSART2_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
       _TMR0_StartTimer
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _memcpy
   _sendPacket
     _EUSART2_Write

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _time_to_send *
         _TMR1_StopTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      B      1D       5       18.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1A      50       1       85.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6D       6        0.0%
DATA                 0      0      6D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Feb 08 20:51:44 2018

                                               l91 0960                           __size_of_ECAN_Initialize 00EE  
                                      __CFG_BORV$3 000000                                    _timer0ReloadVal 0049  
                                     __CFG_CP0$OFF 000000                                       __CFG_CP1$OFF 000000  
                                     __CFG_CP2$OFF 000000                                       __CFG_CP3$OFF 000000  
                                              l348 01A8                                                l583 049C  
                                              l585 04BE                                                l586 04E0  
                                              l587 0502                                                l588 0524  
                                     __CFG_CPB$OFF 000000                                       __CFG_CPD$OFF 000000  
                                              u585 0366                                                u595 06F2  
                                  _timer1ReloadVal 004F                                                tosl 000FFD  
                                              wreg 000FE8                         ??_convertReg2StandardCANid 0041  
                                             l2010 0796                                               l2004 0776  
                                             l2020 07BE                                               l2014 07A6  
                                             l2142 0114                                               l2222 0480  
                                             l2240 0566                                               l2224 0482  
                                             l2170 01F2                                               l2138 00E2  
                                             l2250 05B4                                               l2174 0226  
                                             l2238 0546                                               l2194 02BA  
                                             l2196 02BE                                               l1852 05BC  
                                             l1864 0698                                               l1996 0756  
                                             _LATA 000F89                                               _LATB 000F8A  
                                             _LATC 000F8B                                               _LATD 000F8C  
                                             _LATE 000F8D                                               _WPUB 000F5B  
                                    _EUSART2_Write 095E                                               _data 0001  
                                             _main 045E                                               _send 0005  
                                  _TMR0_StartTimer 0982                                               fsr0h 000FEA  
                                             fsr1h 000FE2                                               fsr2h 000FDA  
                                             fsr0l 000FE9                                               indf2 000FDF  
                                             fsr1l 000FE1                                               fsr2l 000FD9  
                                             btemp 0051                                               prodh 000FF4  
                                             prodl 000FF3                                               start 0096  
                                    __CFG_IESO$OFF 000000                                      __CFG_FOSC$HS2 000000  
                       ??_TMR1_SetInterruptHandler 003F                                      __CFG_MCLRE$ON 000000  
                                     ___param_bank 000000                            __end_of_TMR0_Initialize 083A  
                   ??_TMR0_DefaultInterruptHandler 002F                     __size_of_OSCILLATOR_Initialize 0012  
                    __end_of_OSCILLATOR_Initialize 0950                                              ?_main 002F  
                                  _TMR1_StartTimer 097E                                              _T0CON 000FD5  
                                            _T1CON 000FCD                                              i2l473 004E  
                                            i2l477 005A                                              _TMR0H 000FD7  
                                            _TMR1H 000FCF                                              _TMR0L 000FD6  
                                            _TMR1L 000FCE                                              _TRISA 000F92  
                                            _TRISB 000F93                                              _TRISC 000F94  
                                            _TRISD 000F95                                              _TRISE 000F96  
                __size_of_TMR0_SetInterruptHandler 000A                                      __CFG_WRT0$OFF 000000  
                                    __CFG_WRT1$OFF 000000                                      __CFG_WRT2$OFF 000000  
                        ?_TMR0_SetInterruptHandler 003D                                      __CFG_WRT3$OFF 000000  
                                   __CFG_EBTR0$OFF 000000                                     __CFG_FCMEN$OFF 000000  
                                   __CFG_EBTR1$OFF 000000                              CAN_receive@tempCanMsg 0045  
                                   __CFG_EBTR2$OFF 000000                                     __CFG_EBTR3$OFF 000000  
                                 __end_of_TMR0_ISR 089C                                   __end_of_TMR1_ISR 08C4  
                                    __CFG_WRTB$OFF 000000                                      __CFG_WRTC$OFF 000000  
                                    __CFG_WRTD$OFF 000000                                              _data1 0026  
                                            _data2 001D                                              _data3 0014  
                                            _data4 0069                                              _data5 0060  
                                   __CFG_EBTRB$OFF 000000                            __end_of_TMR1_Initialize 0802  
                                   ?_EUSART2_Write 002F                                              pclath 000FFA  
                                            tablat 000FF5                convertReg2ExtendedCANid@ConvertedID 0079  
                                            status 000FD8                                    __initialization 08C4  
                             __size_of_CAN_receive 022A                                       __end_of_main 05B8  
                      ?_INTERRUPT_InterruptManager 002F                                             ??_main 0048  
                                    __activetblptr 000002                                     __CFG_PLLCFG$ON 000000  
                                   __CFG_RETEN$OFF 000000                                  ??_ECAN_Initialize 003D  
                          __end_of_TMR0_StartTimer 0986                         __end_of_EUSART2_Initialize 093E  
                                           _CANCON 000F6F                                             _ANCON0 000F5D  
                                           _ANCON1 000F5C                                             _T1GCON 000FAA  
                                  __CFG_BBSIZ$BB2K 000000                                     __CFG_WDTEN$OFF 000000  
                                           _RCREG2 000F7A                                             _RCSTA2 000FA6  
                                           _OSCCON 000FD3                                             _RXB0D0 000F66  
                                           _RXB0D1 000F67                                             _RXB0D2 000F68  
                                           _RXB0D3 000F69                                             _RXB0D4 000F6A  
                                           _RXB1D0 000F36                                             _RXB0D5 000F6B  
                                           _RXB1D1 000F37                                             _RXB0D6 000F6C  
                                           _RXB1D2 000F38                                             _RXB0D7 000F6D  
                                           _RXB1D3 000F39                                             _RXB1D4 000F3A  
                                           _RXB1D5 000F3B                                             _RXB1D6 000F3C  
                                           _RXB1D7 000F3D                                             _SPBRG2 000F7B  
                                           _TXB0D0 000F26                                             _TXB0D1 000F27  
                                           _TXB0D2 000F28                                             _TXB0D3 000F29  
                                           _TXB0D4 000F2A                                             _TXB1D0 000F16  
                                           _TXB0D5 000F2B                                             _TXB1D1 000F17  
                                           _TXB0D6 000F2C                                             _TXB1D2 000F18  
                                           _TXB0D7 000F2D                                             _TXB1D3 000F19  
                                           _TXB1D4 000F1A                                             _TXB2D0 000F06  
                                           _TXB1D5 000F1B                                             _TXB2D1 000F07  
                                           _TXB1D6 000F1C                                             _TXB2D2 000F08  
                                           _TXB1D7 000F1D                                             _TXB2D3 000F09  
                                           _TXB2D4 000F0A                                             _TXB2D5 000F0B  
                                           _TXB2D6 000F0C                                             _TXB2D7 000F0D  
                                           i2u7_48 08F6                                             _TXREG2 000F79  
                                           _TXSTA2 000FBA                                     __CFG_XINST$OFF 000000  
             __end_of_TMR1_DefaultInterruptHandler 0990              __size_of_TMR1_DefaultInterruptHandler 0002  
                     _TMR1_DefaultInterruptHandler 098E                            __end_of_TMR1_StartTimer 0982  
                                   __CFG_STVREN$ON 000000                                             _memcpy 0744  
                                 ?_TMR0_Initialize 002F                                             clear_0 08CA  
                                           clear_1 08D6                                             main@id 0048  
                 __end_of_convertReg2StandardCANid 0744                                             tblptrh 000FF7  
                                           tblptrl 000FF6                                             tblptru 000FF8  
                                  ??_EUSART2_Write 003D           TMR0_SetInterruptHandler@InterruptHandler 003D  
         TMR1_SetInterruptHandler@InterruptHandler 003D                      __size_of_INTERRUPT_Initialize 0004  
                            __end_of_TMR1_CallBack 090A                                   ?_TMR1_Initialize 002F  
                                _SYSTEM_Initialize 090A                                         __accesstop 0060  
                          __end_of__initialization 08DC                                 ?_SYSTEM_Initialize 002F  
                         _convertReg2ExtendedCANid 02C4                             CAN_receive@returnValue 0047  
                                    ___rparam_used 000001                                     __pcstackCOMRAM 002F  
                              ??_SYSTEM_Initialize 0041                                          ?_TMR0_ISR 002F  
                                        ?_TMR1_ISR 002F                      ?_TMR1_DefaultInterruptHandler 002F  
                                       _canMessage 0006              convertReg2StandardCANid@tempRXBn_SIDH 0072  
            convertReg2StandardCANid@tempRXBn_SIDL 003D                                   ?_TMR0_StartTimer 002F  
                        __end_of_SYSTEM_Initialize 0928                                         __pbssBANK0 0060  
                                       __pnvCOMRAM 0049                                        sendPacket@i 0040  
                 __end_of_TMR0_SetInterruptHandler 097E                                   ?_TMR1_StartTimer 002F  
                                       ??_TMR0_ISR 002F                                         ??_TMR1_ISR 002F  
                                          ?_memcpy 003D                                            _ECANCON 000F72  
                                          _CANSTAT 000F6E                                            _BRGCON1 000E43  
                                          _BRGCON2 000E44                                            _BRGCON3 000E45  
                          __size_of_TMR1_StopTimer 0004                                   __CFG_CANMX$PORTB 000000  
                                          _REFOCON 000F9A                                            _OSCCON2 000FD2  
                                          i2u12_40 08B6                                            i2u14_48 0888  
                                          _RXB0DLC 000F65                                            _RXB1DLC 000F35  
                                          _OSCTUNE 000F9B                                            _SPBRGH2 000F7C  
                                          _TXB0DLC 000F25                                            _TXB1DLC 000F15  
                                          _TXB2DLC 000F05                                    sendPacket@bytes 003E  
                                  __CFG_PWRTEN$OFF 000000                                            __Hparam 0000  
                                          __Lparam 0000                  __size_of_convertReg2StandardCANid 009E  
                        ?_convertReg2StandardCANid 003D                                    _ECAN_Initialize 05B8  
                                          __pcinit 08C4                                    __size_of_memcpy 0044  
                                          __ramtop 0F00                                            __ptext0 045E  
                                          __ptext1 0788                                            __ptext2 095E  
                                          __ptext3 0744                                            __ptext4 090A  
                                          __ptext5 07C6                                            __ptext6 097E  
                                          __ptext7 096A                                            __ptext8 0802  
                                          __ptext9 0982                                          _T0CONbits 000FD5  
                   ??_TMR1_DefaultInterruptHandler 002F                                          _T1CONbits 000FCD  
                            _OSCILLATOR_Initialize 093E                  __size_of_TMR1_SetInterruptHandler 000A  
                         ??_PIN_MANAGER_Initialize 003D                          ?_TMR1_SetInterruptHandler 003D  
                                __CFG_MSSPMSK$MSK7 000000                         __size_of_SYSTEM_Initialize 001E  
                                       _sendPacket 0788                               end_of_initialization 08DC  
                                          memcpy@d 0043                                            memcpy@n 0041  
                                          memcpy@s 0045                                      __Lmediumconst 0000  
                                    ?_time_to_send 002F                                      ??_CAN_receive 0047  
                               _EUSART2_Initialize 0928                                            postinc0 000FEE  
                                          postinc2 000FDE                                ?_EUSART2_Initialize 002F  
                         _TMR0_SetInterruptHandler 0974                         ??_convertReg2ExtendedCANid 0041  
                             ??_EUSART2_Initialize 003D                                     ??_time_to_send 002F  
                          __end_of_ECAN_Initialize 06A6                       __end_of_INTERRUPT_Initialize 098A  
                              __end_of_CAN_receive 02C4                                  __size_of_TMR0_ISR 002A  
                                __size_of_TMR1_ISR 0028                                     _TMR1_StopTimer 098A  
                                   __end_of_memcpy 0788                             ?_OSCILLATOR_Initialize 002F  
                              start_initialization 08C4                           __size_of_TMR0_Initialize 0038  
                  __size_of_PIN_MANAGER_Initialize 0038                                        ?_sendPacket 003E  
                            __end_of_EUSART2_Write 096A                convertReg2StandardCANid@returnValue 0073  
                         __size_of_TMR1_Initialize 003C                             __end_of_TMR1_StopTimer 098E  
                                         ??_memcpy 0043                             __size_of_TMR1_CallBack 0020  
                            TMR1_ISR@CountCallBack 0003                                        __pbssCOMRAM 0001  
                                    __pcstackBANK0 0072                                EUSART2_Write@txData 003D  
                            _TMR0_InterruptHandler 004B                           __size_of_TMR0_StartTimer 0004  
                                      _CAN_receive 009A                                   ?_ECAN_Initialize 002F  
                           _PIN_MANAGER_Initialize 083A                                          __pintcode 0008  
                 __end_of_TMR1_SetInterruptHandler 0974                                    ?_TMR1_StopTimer 002F  
                              __size_of_sendPacket 003E                       ??_INTERRUPT_InterruptManager 002F  
                             __end_of_time_to_send 095E                                           _BAUDCON2 000FB9  
                         __size_of_TMR1_StartTimer 0004                                        _COMSTATbits 000F71  
                 __end_of_convertReg2ExtendedCANid 045E                               _INTERRUPT_Initialize 0986  
                                    _TMR1_CallBack 08EA                                  ??_TMR0_Initialize 003F  
                                         _LATCbits 000F8B                                           _PIE1bits 000F9D  
                                         _PIE5bits 000F76                __size_of_INTERRUPT_InterruptManager 008E  
                       ??_TMR0_SetInterruptHandler 003F                                           _PIR1bits 000F9E  
                                         _PIR3bits 000FA4                                           _PIR5bits 000F77  
                                         _RXB0EIDH 000F63                                           _RXB0EIDL 000F64  
                                         _RXB1EIDH 000F33                                           _RXB1EIDL 000F34  
                                         _RCONbits 000FD0                                           _RXB0SIDH 000F61  
                                         _RXB0SIDL 000F62                                           _RXB1SIDH 000F31  
                                         _RXF0EIDH 000EE2                                           _RXB1SIDL 000F32  
                                         _RXF0EIDL 000EE3                                           _RXF1EIDH 000EE6  
                                         _RXF1EIDL 000EE7                                           _RXF2EIDH 000EEA  
                                         _RXF2EIDL 000EEB                                           _RXF3EIDH 000EEE  
                                         _RXF3EIDL 000EEF                                           _RXF4EIDH 000EF2  
                                         _RXF4EIDL 000EF3                                           _RXF5EIDH 000EF6  
                                         _RXF5EIDL 000EF7                                           _RXF0SIDH 000EE0  
                                         _RXF0SIDL 000EE1                                           _TXB0EIDH 000F23  
                                         _RXF1SIDH 000EE4                                           _TXB0EIDL 000F24  
                                         _RXF1SIDL 000EE5                                           _TXB1EIDH 000F13  
                                         _RXF2SIDH 000EE8                                           _TXB1EIDL 000F14  
                                         _RXF2SIDL 000EE9                                           _TXB2EIDH 000F03  
                                         _RXF3SIDH 000EEC                                           _TXB2EIDL 000F04  
                                         _RXF3SIDL 000EED                                           _RXF4SIDH 000EF0  
                                         _RXF4SIDL 000EF1                                           _TMR0_ISR 0872  
                                         _RXF5SIDH 000EF4                                           _RXF5SIDL 000EF5  
                                         _TMR1_ISR 089C                                           _RXM0EIDH 000EFA  
                                         _RXM0EIDL 000EFB                                           _TXB0SIDH 000F21  
                                         _RXM1EIDH 000EFE                                           _TXB0SIDL 000F22  
                                         _RXM1EIDL 000EFF                                           _TXB1SIDH 000F11  
                                         _TXB1SIDL 000F12                                           _TXB2SIDH 000F01  
                                         _TXB2SIDL 000F02                                           _RXM0SIDH 000EF8  
                                         _RXM0SIDL 000EF9                                           _RXM1SIDH 000EFC  
                                         _RXM1SIDL 000EFD                                  ??_TMR1_Initialize 003F  
                                 __CFG_SOSCSEL$DIG 000000                              ?_INTERRUPT_Initialize 002F  
                                   ?_TMR1_CallBack 002F                           _convertReg2StandardCANid 06A6  
            convertReg2ExtendedCANid@tempRXBn_EIDH 0072              convertReg2ExtendedCANid@tempRXBn_EIDL 003D  
            convertReg2ExtendedCANid@tempRXBn_SIDH 003E              convertReg2ExtendedCANid@tempRXBn_SIDL 003F  
                                         __Hrparam 0000                                          memcpy@tmp 0047  
                                         __Lrparam 0000                                 __CFG_BOREN$SBORDIS 000000  
                          ??_OSCILLATOR_Initialize 003D                                  ??_TMR0_StartTimer 003D  
                                       _CIOCONbits 000F70                           _TMR1_SetInterruptHandler 096A  
convertReg2ExtendedCANid@CAN_standardLo_ID_hi3bits 0078                              _TMR1_InterruptHandler 004D  
convertReg2ExtendedCANid@CAN_standardLo_ID_lo2bits 0077                                           __ptext10 0974  
                                         __ptext11 083A                                           __ptext20 089C  
                                         __ptext12 093E                                           __ptext21 08EA  
                                         __ptext13 0986                                         _T1GCONbits 000FAA  
                                         __ptext22 098E                                           __ptext14 0928  
                                         __ptext23 0950                                           __ptext15 05B8  
                                         __ptext24 098A                                           __ptext16 009A  
                                         __ptext25 0872                                           __ptext17 06A6  
                                         __ptext26 0990                                           __ptext18 02C4  
                                         __ptext27 0000                                       ??_sendPacket 0040  
                                ??_TMR1_StartTimer 003D                        __size_of_EUSART2_Initialize 0016  
              convertReg2StandardCANid@ConvertedID 0077                                      __size_of_main 015A  
             __end_of_TMR0_DefaultInterruptHandler 0992              __size_of_TMR0_DefaultInterruptHandler 0002  
                     _TMR0_DefaultInterruptHandler 0990                convertReg2ExtendedCANid@returnValue 0073  
                __size_of_convertReg2ExtendedCANid 019A                          ?_convertReg2ExtendedCANid 003D  
                                         int$flags 0051                              __size_of_time_to_send 000E  
               __end_of_INTERRUPT_InterruptManager 0096                         _INTERRUPT_InterruptManager 0008  
                               __end_of_sendPacket 07C6                                __CFG_INTOSCSEL$HIGH 000000  
                                      _RXB0CONbits 000F60                                        _RXB1CONbits 000F30  
                                       _INTCONbits 000FF2                                           memcpy@d1 003D  
                                         memcpy@s1 003F                             ??_INTERRUPT_Initialize 003D  
                                  ??_TMR1_CallBack 002F                                           intlevel2 0000  
                          ?_PIN_MANAGER_Initialize 002F                                       _time_to_send 0950  
                                      _TXB0CONbits 000F20                                         _RCSTA2bits 000FA6  
                                     ?_CAN_receive 0045                                        _TXB1CONbits 000F10  
                                      _TXB2CONbits 000F00                                   ??_TMR1_StopTimer 002F  
                    ?_TMR0_DefaultInterruptHandler 002F                                 __CFG_WDTPS$1048576 000000  
                           __size_of_EUSART2_Write 000C                                    _TMR0_Initialize 0802  
                   __end_of_PIN_MANAGER_Initialize 0872                                __CFG_BORPWR$ZPBORMV 000000  
                                  _TMR1_Initialize 07C6  
